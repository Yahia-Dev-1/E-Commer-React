{"version":3,"file":"static/js/992.57ff1bc6.chunk.js","mappings":"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","sources":["components/Admin.js"],"sourcesContent":["import React, { useState, useEffect, useCallback } from 'react';\nimport '../styles/Admin.css';\nimport database from '../utils/database';\n\nexport default function Admin({ darkMode = true }) {\n  const [users, setUsers] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [activeTab, setActiveTab] = useState('users');\n  const [loading, setLoading] = useState(true);\n  const [showAllUsers, setShowAllUsers] = useState(true); // Changed to true to show all users by default\n  const [lastSaveTime, setLastSaveTime] = useState(null);\n  const [isAuthorized, setIsAuthorized] = useState(false);\n  const [showAddAdminForm, setShowAddAdminForm] = useState(false);\n  const [newAdmin, setNewAdmin] = useState({\n    email: '',\n    password: '',\n    name: ''\n  });\n  const [addAdminError, setAddAdminError] = useState('');\n  const [quickAdminEmail, setQuickAdminEmail] = useState('');\n\n  const checkAuthorization = useCallback(() => {\n    const savedAdminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    const defaultAdminEmails = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const adminEmails = savedAdminEmails.length > 0 ? savedAdminEmails : defaultAdminEmails;\n    \n    const currentUserEmail = localStorage.getItem('currentUserEmail');\n    \n    if (currentUserEmail && adminEmails.includes(currentUserEmail)) {\n      const allUsers = database.getUsers();\n      const userExists = allUsers.some(user => user.email === currentUserEmail);\n      \n      if (userExists) {\n        setIsAuthorized(true);\n        console.log('Authorization granted');\n      } else {\n        addProtectedAdmins();\n        setTimeout(() => {\n          setIsAuthorized(true);\n          console.log('Authorization granted after adding user');\n        }, 500);\n      }\n    } else {\n      console.log('User not in admin list, authorization denied');\n      setIsAuthorized(false);\n    }\n  }, []);\n\n  const loadData = useCallback(() => {\n    setLoading(true);\n    const allUsers = database.getUsers();\n    const allOrders = database.getOrders();\n    \n    const protectedAdmins = [\n      {\n        email: 'yahiapro400@gmail.com',\n        password: 'yahia2024',\n        name: 'Yahia Pro'\n      },\n      {\n        email: 'yahiacool2009@gmail.com',\n        password: 'yahia2009',\n        name: 'Yahia Cool'\n      }\n    ];\n\n    protectedAdmins.forEach(admin => {\n      const existingUser = allUsers.find(user => user.email === admin.email);\n      if (!existingUser) {\n        try {\n          database.registerUser({\n            email: admin.email,\n            password: admin.password,\n            name: admin.name\n          });\n          console.log(`Added protected admin: ${admin.email}`);\n        } catch (error) {\n          console.log(`Protected admin ${admin.email} already exists or error occurred:`, error.message);\n        }\n      }\n    });\n\n    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    protectedAdmins.forEach(admin => {\n      if (!adminEmails.includes(admin.email)) {\n        adminEmails.push(admin.email);\n      }\n    });\n    localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n    \n    const updatedUsers = database.getUsers();\n    \n    const savedAdminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    const defaultAdminEmails = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const finalAdminEmails = savedAdminEmails.length > 0 ? savedAdminEmails : defaultAdminEmails;\n    const filteredUsers = updatedUsers.filter(user => finalAdminEmails.includes(user.email));\n    \n    const usersToShow = showAllUsers ? updatedUsers : filteredUsers;\n    \n    setUsers(usersToShow);\n    setOrders(allOrders);\n    setLastSaveTime(database.getLastSaveTime());\n    setLoading(false);\n  }, [showAllUsers]);\n\n  useEffect(() => {\n    const initializeProtectedAdmins = () => {\n      const protectedAdmins = [\n        {\n          email: 'yahiapro400@gmail.com',\n          password: 'yahia2024',\n          name: 'Yahia Pro'\n        },\n        {\n          email: 'yahiacool2009@gmail.com',\n          password: 'yahia2009',\n          name: 'Yahia Cool'\n        }\n      ];\n\n      const allUsers = database.getUsers();\n      const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n\n      protectedAdmins.forEach(admin => {\n        const existingUser = allUsers.find(user => user.email === admin.email);\n        if (!existingUser) {\n          try {\n            database.registerUser({\n              email: admin.email,\n              password: admin.password,\n              name: admin.name\n            });\n            console.log(`Initialized protected admin: ${admin.email}`);\n          } catch (error) {\n            console.log(`Protected admin ${admin.email} already exists:`, error.message);\n          }\n        }\n\n        if (!adminEmails.includes(admin.email)) {\n          adminEmails.push(admin.email);\n        }\n      });\n\n      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n    };\n\n    initializeProtectedAdmins();\n    \n    setTimeout(() => {\n      checkAuthorization();\n    }, 100);\n    \n    loadData();\n  }, [checkAuthorization, loadData]);\n\n  useEffect(() => {\n    if (isAuthorized) {\n      loadData();\n    }\n  }, [showAllUsers, isAuthorized, loadData]);\n\n  const deleteUser = (userId) => {\n    const userToDelete = users.find(user => user.id === userId);\n    \n    if (!userToDelete) {\n      alert('User not found!');\n      return;\n    }\n\n    const protectedAdmins = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const currentUserEmail = localStorage.getItem('currentUserEmail');\n    \n    if (protectedAdmins.includes(userToDelete.email)) {\n      alert('❌ Cannot delete protected admin accounts!\\n\\nOnly yahiapro400@gmail.com and yahiacool2009@gmail.com can delete protected admins.');\n      return;\n    }\n\n    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    \n    if (adminEmails.includes(userToDelete.email) && !protectedAdmins.includes(currentUserEmail)) {\n      alert('❌ Only protected admins can delete other admin accounts!\\n\\nContact yahiapro400@gmail.com or yahiacool2009@gmail.com to delete admin accounts.');\n      return;\n    }\n\n    if (window.confirm(`Are you sure you want to delete user: ${userToDelete.email}?`)) {\n      const success = database.deleteUser(userId);\n      if (success) {\n        alert(`✅ User ${userToDelete.email} has been deleted successfully!`);\n        loadData();\n      } else {\n        alert('❌ Failed to delete user. Please try again.');\n      }\n    }\n  };\n\n  const rejectOrder = (orderId) => {\n    const orderToReject = orders.find(order => order.id === orderId);\n    if (!orderToReject) return;\n\n    const updatedOrders = orders.map(order =>\n      order.id === orderId ? { ...order, status: 'rejected' } : order\n    );\n    setOrders(updatedOrders);\n    localStorage.setItem('ecommerce_orders', JSON.stringify(updatedOrders));\n    \n    addRejectionNotification(orderToReject);\n    alert(`Order #${orderToReject.orderNumber} has been rejected.`);\n  };\n\n  const approveOrder = (orderId) => {\n    const updatedOrders = orders.map(order =>\n      order.id === orderId ? { ...order, status: 'approved' } : order\n    );\n    setOrders(updatedOrders);\n    localStorage.setItem('ecommerce_orders', JSON.stringify(updatedOrders));\n    alert('Order has been approved.');\n  };\n\n  const deleteOrder = (orderId) => {\n    const orderToDelete = orders.find(order => order.id === orderId);\n    if (!orderToDelete) return;\n\n    if (window.confirm(`Are you sure you want to delete order #${orderToDelete.orderNumber}?`)) {\n      const updatedOrders = orders.filter(order => order.id !== orderId);\n      setOrders(updatedOrders);\n      localStorage.setItem('ecommerce_orders', JSON.stringify(updatedOrders));\n      \n      addDeletionNotification(orderToDelete);\n      restoreProductQuantities(orderToDelete);\n      alert(`Order #${orderToDelete.orderNumber} has been deleted.`);\n    }\n  };\n\n  const addRejectionNotification = (order) => {\n    const notifications = JSON.parse(localStorage.getItem('order_notifications') || '[]');\n    const notification = {\n      id: Date.now(),\n      type: 'rejection',\n      message: `Your order #${order.orderNumber} has been rejected.`,\n      date: new Date().toISOString(),\n      userEmail: order.userEmail,\n      read: false\n    };\n    notifications.push(notification);\n    localStorage.setItem('order_notifications', JSON.stringify(notifications));\n  };\n\n  const addDeletionNotification = (order) => {\n    const notifications = JSON.parse(localStorage.getItem('order_notifications') || '[]');\n    const notification = {\n      id: Date.now(),\n      type: 'deletion',\n      message: `Your order #${order.orderNumber} has been deleted.`,\n      date: new Date().toISOString(),\n      userEmail: order.userEmail,\n      read: false\n    };\n    notifications.push(notification);\n    localStorage.setItem('order_notifications', JSON.stringify(notifications));\n  };\n\n  const restoreProductQuantities = (order) => {\n    try {\n      const existingProducts = JSON.parse(localStorage.getItem('ecommerce_products') || '[]');\n      \n      order.items.forEach(item => {\n        const productIndex = existingProducts.findIndex(p => p.id === item.id);\n        if (productIndex !== -1) {\n          existingProducts[productIndex].quantity += item.quantity;\n        }\n      });\n      \n      localStorage.setItem('ecommerce_products', JSON.stringify(existingProducts));\n      console.log('Product quantities restored after order deletion');\n    } catch (error) {\n      console.error('Error restoring product quantities:', error);\n    }\n  };\n\n  const clearDatabase = () => {\n    if (window.confirm('Are you sure you want to clear all data? This action cannot be undone!')) {\n      database.clearDatabase();\n      setUsers([]);\n      setOrders([]);\n      alert('All data has been cleared.');\n    }\n  };\n\n  const addProtectedAdmins = () => {\n    try {\n      const protectedAdmins = [\n        {\n          email: 'yahiapro400@gmail.com',\n          password: 'yahia2024',\n          name: 'Yahia Pro'\n        },\n        {\n          email: 'yahiacool2009@gmail.com',\n          password: 'yahia2009',\n          name: 'Yahia Cool'\n        }\n      ];\n\n      const users = JSON.parse(localStorage.getItem('ecommerce_users') || '[]');\n      const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n      let addedCount = 0;\n\n      protectedAdmins.forEach(admin => {\n        const existingUser = users.find(user => user.email === admin.email);\n        if (!existingUser) {\n          const newAdminUser = {\n            id: Date.now() + Math.random(),\n            email: admin.email,\n            password: admin.password,\n            name: admin.name,\n            createdAt: new Date().toISOString(),\n            orders: []\n          };\n\n          users.push(newAdminUser);\n          addedCount++;\n\n          if (!adminEmails.includes(admin.email)) {\n            adminEmails.push(admin.email);\n          }\n        } else {\n          if (!adminEmails.includes(admin.email)) {\n            adminEmails.push(admin.email);\n            addedCount++;\n          }\n        }\n      });\n\n      localStorage.setItem('ecommerce_users', JSON.stringify(users));\n      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n\n      if (addedCount > 0) {\n        alert(`✅ Added ${addedCount} protected admin(s) successfully!`);\n      } else {\n        alert('ℹ️ Protected admins already exist.');\n      }\n    } catch (error) {\n      alert('Error adding protected admins: ' + error.message);\n    }\n  };\n\n  const fixLoginIssues = () => {\n    if (window.confirm('🔧 Fix login issues?\\n\\nThis will:\\n• Reset protected admin accounts\\n• Ensure correct passwords\\n• Fix any corrupted data\\n\\nContinue?')) {\n      try {\n        const success = database.resetProtectedAdmins();\n        if (success) {\n          alert('✅ Login issues fixed successfully!\\n\\nYou can now login with:\\n• yahiapro400@gmail.com / yahia2024\\n• yahiacool2009@gmail.com / yahia2009');\n          loadData();\n        } else {\n          alert('❌ Failed to fix login issues. Please try again.');\n        }\n      } catch (error) {\n        alert('❌ Error fixing login issues: ' + error.message);\n      }\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const formatShortDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  if (!isAuthorized) {\n    return (\n      <div className={`admin-container ${darkMode ? 'dark-mode' : ''}`}>\n        <div className=\"unauthorized\">\n          <div className=\"unauthorized-content\">\n            <h1>Access Denied</h1>\n            <p>You are not authorized to access the admin dashboard.</p>\n            <p>Only authorized admin accounts can access this page.</p>\n            <div className=\"unauthorized-info\">\n              <h3>Authorized Admin Accounts:</h3>\n              <ul>\n                <li>yahiapro400@gmail.com</li>\n                <li>yahiacool2009@gmail.com</li>\n              </ul>\n            </div>\n            <div className=\"unauthorized-actions\">\n              <button \n                className=\"add-protected-admins-btn\"\n                onClick={() => {\n                  addProtectedAdmins();\n                  setTimeout(() => {\n                    checkAuthorization();\n                  }, 1000);\n                }}\n              >\n                Add Protected Admins\n              </button>\n              <button \n                className=\"fix-login-btn\"\n                onClick={fixLoginIssues}\n              >\n                🔧 Fix Login Issues\n              </button>\n              <button \n                className=\"fix-access-btn\"\n                onClick={() => {\n                  const currentUserEmail = localStorage.getItem('currentUserEmail');\n                  if (currentUserEmail) {\n                    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n                    if (!adminEmails.includes(currentUserEmail)) {\n                      adminEmails.push(currentUserEmail);\n                      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n                    }\n                    const users = database.getUsers();\n                    const userExists = users.some(user => user.email === currentUserEmail);\n                    if (!userExists) {\n                      database.registerUser({\n                        email: currentUserEmail,\n                        password: 'admin123',\n                        name: currentUserEmail.split('@')[0]\n                      });\n                    }\n                    setTimeout(() => {\n                      checkAuthorization();\n                    }, 500);\n                    alert(`تم إضافة ${currentUserEmail} كمدير بنجاح!`);\n                  } else {\n                    alert('يرجى تسجيل الدخول أولاً');\n                  }\n                }}\n              >\n                إصلاح الوصول\n              </button>\n              <button \n                className=\"back-btn\" \n                onClick={() => window.history.back()}\n              >\n                Go Back\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className={`admin-container ${darkMode ? 'dark-mode' : ''}`}>\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n          <p>Loading data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`admin-container ${darkMode ? 'dark-mode' : ''}`}>\n      <div className=\"admin-header\">\n        <h1>Admin Dashboard</h1>\n        <p>Welcome back, Admin! Manage your e-commerce platform.</p>\n        <div className=\"admin-stats\">\n          <div className=\"stat-card\">\n            <span className=\"stat-icon\">👤</span>\n            <h3>{users.length}</h3>\n            <p>Total Users</p>\n          </div>\n          <div className=\"stat-card\">\n            <span className=\"stat-icon\">🛒</span>\n            <h3>{orders.length}</h3>\n            <p>Total Orders</p>\n          </div>\n          <div className=\"stat-card\">\n            <span className=\"stat-icon\">🛡️</span>\n            <h3>{users.filter(u => ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(u.email)).length}</h3>\n            <p>Protected Admins</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"admin-tabs\">\n        <button \n          className={`tab-btn ${activeTab === 'users' ? 'active' : ''}`}\n          onClick={() => setActiveTab('users')}\n        >\n          Users Management\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'orders' ? 'active' : ''}`}\n          onClick={() => setActiveTab('orders')}\n        >\n          Orders Management\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'manage-admins' ? 'active' : ''}`}\n          onClick={() => setActiveTab('manage-admins')}\n        >\n          Manage Admins\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'stats' ? 'active' : ''}`}\n          onClick={() => setActiveTab('stats')}\n        >\n          📊 Advanced Stats\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'analytics' ? 'active' : ''}`}\n          onClick={() => setActiveTab('analytics')}\n        >\n          📈 Analytics\n        </button>\n\n      </div>\n\n      <div className=\"admin-content\">\n        {activeTab === 'users' && (\n          <div className=\"users-section\">\n            <div className=\"section-header\">\n              <h2>{showAllUsers ? 'All Users List' : 'Admin Users List'}</h2>\n              <div className=\"header-actions\">\n                <button \n                  className={`toggle-btn ${showAllUsers ? 'active' : ''}`}\n                  onClick={() => setShowAllUsers(!showAllUsers)}\n                >\n                  {showAllUsers ? 'Show Admin Only' : 'Show All Users'}\n                </button>\n                <button className=\"refresh-btn\" onClick={loadData}>\n                  Refresh Data\n                </button>\n              </div>\n            </div>\n            \n            {users.length === 0 ? (\n              <div className=\"no-data\">\n                <p>No users found</p>\n              </div>\n            ) : (\n              <div className=\"users-list\">\n                <div className=\"users-summary\">\n                  <h3>📊 Users Summary</h3>\n                  <p>Total Users: <strong>{users.length}</strong></p>\n                  <p>Protected Admins: <strong>{users.filter(u => ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(u.email)).length}</strong></p>\n                  <p>Regular Users: <strong>{users.filter(u => !['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(u.email)).length}</strong></p>\n                </div>\n                \n                {users.map((user, index) => {\n                  const isProtected = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(user.email);\n                  const isAdmin = JSON.parse(localStorage.getItem('admin_emails') || '[]').includes(user.email);\n                  return (\n                    <div key={user.id} className={`user-card ${isProtected ? 'protected' : ''} ${isAdmin ? 'admin' : 'regular'}`}>\n                      <div className=\"user-info\">\n                        <div className=\"user-header\">\n                          <h3>\n                            #{index + 1} - {user.name}\n                            {isProtected && <span className=\"protected-badge\">🛡️ Protected Admin</span>}\n                            {isAdmin && !isProtected && <span className=\"admin-badge\">👑 Admin</span>}\n                            {!isAdmin && <span className=\"user-badge\">👤 User</span>}\n                          </h3>\n                        </div>\n                        <p className=\"user-email\"><strong>Email:</strong> {user.email}</p>\n                        <p className=\"user-date\"><strong>Registration Date:</strong> {formatDate(user.createdAt)}</p>\n                        <p className=\"user-orders\"><strong>Number of Orders:</strong> {user.orders?.length || 0}</p>\n                        <p className=\"user-id\"><strong>User ID:</strong> {user.id}</p>\n                        {user.password && (\n                          <p className=\"user-password\"><strong>Password:</strong> {user.password}</p>\n                        )}\n                      </div>\n                      <div className=\"user-actions\">\n                        {!isProtected && (\n                          <button \n                            className=\"delete-btn\"\n                            onClick={() => deleteUser(user.id)}\n                          >\n                            Delete\n                          </button>\n                        )}\n                        {isProtected && (\n                          <span className=\"protected-message\">Protected Admin - Cannot Delete</span>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'orders' && (\n          <div className=\"orders-section\">\n            <div className=\"section-header\">\n              <h2>Orders Management</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Refresh Data\n              </button>\n            </div>\n            \n            {orders.length === 0 ? (\n              <div className=\"no-data\">\n                <p>No orders found</p>\n              </div>\n            ) : (\n              <div className=\"orders-list\">\n                {orders.map((order) => (\n                  <div key={order.id} className=\"order-card\">\n                    <div className=\"order-info\">\n                      <h3>Order #{order.orderNumber}</h3>\n                      <p className=\"order-email font-weight-bold\">{order.userEmail}</p>\n                      <p className=\"order-date font-weight-bold\">Order Date: {formatDate(order.date)}</p>\n                      <p className=\"order-status font-weight-bold\">Status: {order.status}</p>\n                      <p className=\"order-total font-weight-bold\">Total: ${order.total.toFixed(2)}</p>\n                      <p className=\"order-items font-weight-bold\">Number of Items: {order.items.length}</p>\n                      {order.shipping && Object.keys(order.shipping).length > 0 && (\n                        <div className=\"shipping-info\">\n                          <h4>Shipping Details:</h4>\n                          <p><strong>Name:</strong> {order.shipping.fullName}</p>\n                          <p><strong>Phone:</strong> {order.shipping.phone}</p>\n                          <p><strong>Address:</strong> {order.shipping.street}, {order.shipping.building}</p>\n                          <p><strong>Address Inside Country:</strong> {order.shipping.addressInCountry}</p>\n                          <p><strong>City:</strong> {order.shipping.city}, {order.shipping.governorate}</p>\n                          {order.shipping.additionalInfo && (\n                            <p><strong>Notes:</strong> {order.shipping.additionalInfo}</p>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"order-items\">\n                      {order.items.map((item, index) => (\n                        <div key={index} className=\"order-item\">\n                          <div className=\"item-image\">\n                            <img src={item.image} alt={item.name} />\n                          </div>\n                          <div className=\"item-details\">\n                            <h4>{item.name}</h4>\n                            <p className=\"item-price\">${item.price}</p>\n                            <p className=\"item-quantity\">Quantity Sold: {item.quantity}</p>\n                            <p className=\"item-total\">Total: ${(item.price * item.quantity).toFixed(2)}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"order-actions\">\n                      {order.status !== 'rejected' && order.status !== 'approved' && (\n                        <button \n                          className=\"reject-btn\"\n                          onClick={() => rejectOrder(order.id)}\n                        >\n                          Reject Order\n                        </button>\n                      )}\n                      {order.status === 'rejected' && (\n                        <div className=\"order-actions\">\n                          <span className=\"rejected-status\">Rejected</span>\n                          <button \n                            className=\"approve-btn\"\n                            onClick={() => approveOrder(order.id)}\n                          >\n                            Re-activate\n                          </button>\n                        </div>\n                      )}\n                      {order.status === 'approved' && (\n                        <span className=\"approved-status\">Approved</span>\n                      )}\n                      <button \n                        className=\"delete-order-btn\"\n                        onClick={() => deleteOrder(order.id)}\n                      >\n                        Delete Order\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'stats' && (\n          <div className=\"stats-section\">\n            <div className=\"section-header\">\n              <h2>📊 Advanced Statistics</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Refresh Stats\n              </button>\n            </div>\n            \n            <div className=\"stats-grid\">\n              <div className=\"stats-card\">\n                <h3>📈 Revenue Analytics</h3>\n                <div className=\"revenue-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Total Revenue</span>\n                    <span className=\"stat-value\">${orders.reduce((total, order) => total + order.total, 0).toFixed(2)}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Average Order Value</span>\n                    <span className=\"stat-value\">${orders.length > 0 ? (orders.reduce((total, order) => total + order.total, 0) / orders.length).toFixed(2) : '0.00'}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Orders This Month</span>\n                    <span className=\"stat-value\">{orders.filter(order => {\n                      const orderDate = new Date(order.date);\n                      const now = new Date();\n                      return orderDate.getMonth() === now.getMonth() && orderDate.getFullYear() === now.getFullYear();\n                    }).length}</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"stats-card\">\n                <h3>👥 User Analytics</h3>\n                <div className=\"user-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Total Users</span>\n                    <span className=\"stat-value\">{users.length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Active Users</span>\n                    <span className=\"stat-value\">{users.filter(user => user.orders && user.orders.length > 0).length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">New Users This Month</span>\n                    <span className=\"stat-value\">{users.filter(user => {\n                      const userDate = new Date(user.createdAt);\n                      const now = new Date();\n                      return userDate.getMonth() === now.getMonth() && userDate.getFullYear() === now.getFullYear();\n                    }).length}</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"stats-card\">\n                <h3>🛒 Order Status</h3>\n                <div className=\"order-status-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Pending Orders</span>\n                    <span className=\"stat-value\">{orders.filter(order => order.status === 'pending').length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Approved Orders</span>\n                    <span className=\"stat-value\">{orders.filter(order => order.status === 'approved').length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Rejected Orders</span>\n                    <span className=\"stat-value\">{orders.filter(order => order.status === 'rejected').length}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'manage-admins' && (\n          <div className=\"manage-admins-section\">\n            <div className=\"section-header\">\n              <h2>👥 Manage Admins</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Refresh Data\n              </button>\n            </div>\n            \n            <div className=\"add-admin-form\">\n              <h3>Add New Admin</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"adminEmail\">Admin Email:</label>\n                <input\n                  type=\"email\"\n                  id=\"adminEmail\"\n                  className=\"admin-input\"\n                  placeholder=\"Enter admin email\"\n                  value={newAdmin.email}\n                  onChange={(e) => setNewAdmin({...newAdmin, email: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"adminPassword\">Password:</label>\n                <input\n                  type=\"password\"\n                  id=\"adminPassword\"\n                  className=\"admin-input\"\n                  placeholder=\"Enter password\"\n                  value={newAdmin.password}\n                  onChange={(e) => setNewAdmin({...newAdmin, password: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"adminName\">Name:</label>\n                <input\n                  type=\"text\"\n                  id=\"adminName\"\n                  className=\"admin-input\"\n                  placeholder=\"Enter admin name\"\n                  value={newAdmin.name}\n                  onChange={(e) => setNewAdmin({...newAdmin, name: e.target.value})}\n                />\n              </div>\n              <button className=\"add-admin-btn\" onClick={() => {\n                if (newAdmin.email && newAdmin.password && newAdmin.name) {\n                  try {\n                    database.registerUser(newAdmin);\n                    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n                    if (!adminEmails.includes(newAdmin.email)) {\n                      adminEmails.push(newAdmin.email);\n                      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n                    }\n                    setNewAdmin({ email: '', password: '', name: '' });\n                    alert('Admin added successfully!');\n                    loadData();\n                  } catch (error) {\n                    alert('Error adding admin: ' + error.message);\n                  }\n                } else {\n                  alert('Please fill all fields');\n                }\n              }}>\n                Add Admin\n              </button>\n              {addAdminError && <div className=\"admin-message error\">{addAdminError}</div>}\n            </div>\n\n            <div className=\"current-admins\">\n              <h3>Current Admins</h3>\n              <div className=\"admins-list\">\n                {(() => {\n                  const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n                  const defaultAdmins = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n                  const allAdmins = adminEmails.length > 0 ? adminEmails : defaultAdmins;\n                  \n                  return allAdmins.map((email, index) => (\n                    <div key={index} className=\"admin-item\">\n                      <span className=\"admin-email\">{email}</span>\n                      <span className=\"admin-status\">Active</span>\n                    </div>\n                  ));\n                })()}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'analytics' && (\n          <div className=\"analytics-section\">\n            <div className=\"section-header\">\n              <h2>📈 Real-time Analytics</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Update Analytics\n              </button>\n            </div>\n            \n            <div className=\"analytics-grid\">\n              <div className=\"analytics-card\">\n                <h3>🔥 Top Performing Products</h3>\n                <div className=\"top-products\">\n                  {(() => {\n                    const productStats = {};\n                    orders.forEach(order => {\n                      order.items.forEach(item => {\n                        if (!productStats[item.name]) {\n                          productStats[item.name] = { quantity: 0, revenue: 0 };\n                        }\n                        productStats[item.name].quantity += item.quantity;\n                        productStats[item.name].revenue += item.price * item.quantity;\n                      });\n                    });\n                    \n                    const topProducts = Object.entries(productStats)\n                      .sort(([,a], [,b]) => b.revenue - a.revenue)\n                      .slice(0, 5);\n                    \n                    return topProducts.map(([name, stats], index) => (\n                      <div key={name} className=\"product-stat\">\n                        <span className=\"rank\">#{index + 1}</span>\n                        <span className=\"name\">{name}</span>\n                        <span className=\"quantity\">Sold: {stats.quantity}</span>\n                        <span className=\"revenue\">${stats.revenue.toFixed(2)}</span>\n                      </div>\n                    ));\n                  })()}\n                </div>\n              </div>\n\n              <div className=\"analytics-card\">\n                <h3>📅 Recent Activity</h3>\n                <div className=\"recent-activity\">\n                  {orders.slice(0, 5).map(order => (\n                    <div key={order.id} className=\"activity-item\">\n                      <span className=\"activity-icon\">🛒</span>\n                      <span className=\"activity-text\">Order #{order.orderNumber} - ${order.total.toFixed(2)}</span>\n                      <span className=\"activity-time\">{formatShortDate(order.date)}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"analytics-card\">\n                <h3>🎯 Quick Actions</h3>\n                <div className=\"quick-actions\">\n                  <button className=\"quick-action-btn\" onClick={() => setActiveTab('users')}>\n                    👥 Manage Users\n                  </button>\n                  <button className=\"quick-action-btn\" onClick={() => setActiveTab('orders')}>\n                    📦 View Orders\n                  </button>\n                  <button className=\"quick-action-btn\" onClick={clearDatabase}>\n                    🗑️ Clear Database\n                  </button>\n                  <button className=\"quick-action-btn\" onClick={addProtectedAdmins}>\n                    🛡️ Add Protected Admins\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n\n      </div>\n    </div>\n  );\n} "],"names":["Admin","_ref","darkMode","users","setUsers","useState","orders","setOrders","activeTab","setActiveTab","loading","setLoading","showAllUsers","setShowAllUsers","lastSaveTime","setLastSaveTime","isAuthorized","setIsAuthorized","showAddAdminForm","setShowAddAdminForm","newAdmin","setNewAdmin","email","password","name","addAdminError","setAddAdminError","quickAdminEmail","setQuickAdminEmail","checkAuthorization","useCallback","savedAdminEmails","JSON","parse","localStorage","getItem","adminEmails","length","currentUserEmail","includes","database","getUsers","some","user","console","log","addProtectedAdmins","setTimeout","loadData","allUsers","allOrders","getOrders","protectedAdmins","forEach","admin","find","registerUser","error","message","push","setItem","stringify","updatedUsers","finalAdminEmails","filteredUsers","filter","getLastSaveTime","useEffect","initializeProtectedAdmins","addRejectionNotification","order","notifications","notification","id","Date","now","type","orderNumber","date","toISOString","userEmail","read","addDeletionNotification","restoreProductQuantities","existingProducts","items","item","productIndex","findIndex","p","quantity","addedCount","newAdminUser","Math","random","createdAt","alert","fixLoginIssues","window","confirm","resetProtectedAdmins","formatDate","dateString","toLocaleDateString","year","month","day","hour","minute","_jsx","className","children","_jsxs","u","onClick","map","index","_user$orders","isProtected","isAdmin","userId","userToDelete","deleteUser","status","total","toFixed","shipping","Object","keys","fullName","phone","street","building","addressInCountry","city","governorate","additionalInfo","src","image","alt","price","orderId","orderToReject","updatedOrders","rejectOrder","approveOrder","orderToDelete","deleteOrder","reduce","orderDate","getMonth","getFullYear","userDate","htmlFor","placeholder","value","onChange","e","target","productStats","revenue","entries","sort","_ref2","_ref3","a","b","slice","_ref4","stats","clearDatabase","split","history","back"],"sourceRoot":""}