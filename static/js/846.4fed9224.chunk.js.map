{"version":3,"file":"static/js/846.4fed9224.chunk.js","mappings":"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","sources":["components/UsersList.js","components/UsersSummary.js","components/Admin.js"],"sourcesContent":["import React, { useState } from 'react';\r\n\r\nexport default function UsersList({ users, onEditUser, onDeleteUser, adminEmails }) {\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [filter, setFilter] = useState('all');\r\n\r\n  // Filter users based on search term and filter type\r\n  const filteredUsers = users.filter(user => {\r\n    const matchesSearch = \r\n      user.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\r\n      user.email?.toLowerCase().includes(searchTerm.toLowerCase());\r\n      \r\n    if (filter === 'all') return matchesSearch;\r\n    if (filter === 'admin') return matchesSearch && adminEmails.includes(user.email);\r\n    if (filter === 'regular') return matchesSearch && !adminEmails.includes(user.email);\r\n    return matchesSearch;\r\n  });\r\n\r\n  const formatDate = (date) => {\r\n    if (!date) return 'N/A';\r\n    return new Date(date).toLocaleDateString('en-US', {\r\n      year: 'numeric',\r\n      month: 'short',\r\n      day: 'numeric'\r\n    });\r\n  };\r\n\r\n  return (\r\n    <div className=\"users-list-container\">\r\n      <div className=\"users-list-header\">\r\n        <h2 className=\"users-list-title\">Users Management</h2>\r\n        <div className=\"users-list-controls\">\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Search users...\"\r\n            className=\"users-search\"\r\n            value={searchTerm}\r\n            onChange={(e) => setSearchTerm(e.target.value)}\r\n          />\r\n          <select \r\n            className=\"users-filter\"\r\n            value={filter}\r\n            onChange={(e) => setFilter(e.target.value)}\r\n          >\r\n            <option value=\"all\">All Users</option>\r\n            <option value=\"admin\">Admins Only</option>\r\n            <option value=\"regular\">Regular Users</option>\r\n          </select>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"table-responsive\">\r\n        <table className=\"users-table\">\r\n          <thead>\r\n            <tr>\r\n              <th>Name</th>\r\n              <th>Email</th>\r\n              <th>Status</th>\r\n              <th>Joined Date</th>\r\n              <th>Actions</th>\r\n            </tr>\r\n          </thead>\r\n          <tbody>\r\n            {filteredUsers.map(user => (\r\n              <tr key={user.email}>\r\n                <td>{user.name || 'N/A'}</td>\r\n                <td>{user.email}</td>\r\n                <td>\r\n                  <span className={`user-status ${adminEmails.includes(user.email) ? 'admin' : 'regular'}`}>\r\n                    {adminEmails.includes(user.email) ? 'Admin' : 'User'}\r\n                  </span>\r\n                </td>\r\n                <td>{formatDate(user.joinDate)}</td>\r\n                <td>\r\n                  <div className=\"user-actions\">\r\n                    <button \r\n                      className=\"user-action-btn edit\"\r\n                      onClick={() => onEditUser(user)}\r\n                    >\r\n                      Edit\r\n                    </button>\r\n                    {!adminEmails.includes(user.email) && (\r\n                      <button \r\n                        className=\"user-action-btn delete\"\r\n                        onClick={() => onDeleteUser(user)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    )}\r\n                  </div>\r\n                </td>\r\n              </tr>\r\n            ))}\r\n          </tbody>\r\n        </table>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React from 'react';\r\nimport './UsersSummary.css';\r\n\r\nexport default function UsersSummary({ users, adminEmails }) {\r\n  const totalUsers = users.length;\r\n  const totalAdmins = users.filter(user => adminEmails.includes(user.email)).length;\r\n  const totalRegularUsers = totalUsers - totalAdmins;\r\n\r\n  return (\r\n    <div className=\"users-summary-container\">\r\n      <h3 className=\"summary-title\">User Statistics</h3>\r\n      <div className=\"summary-grid\">\r\n        <div className=\"summary-card total\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-value\">{totalUsers}</span>\r\n            <span className=\"card-label\">Total Users</span>\r\n          </div>\r\n          <div className=\"card-icon\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n              <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\r\n              <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\r\n              <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\r\n              <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n        \r\n        <div className=\"summary-card admins\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-value\">{totalAdmins}</span>\r\n            <span className=\"card-label\">Admins</span>\r\n          </div>\r\n          <div className=\"card-icon\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n              <path d=\"M20 7h-8v12h8V7zM4 7h8v12H4z\"></path>\r\n              <rect x=\"4\" y=\"7\" width=\"16\" height=\"12\"></rect>\r\n              <circle cx=\"12\" cy=\"11\" r=\"1\"></circle>\r\n              <path d=\"M12 12v3\"></path>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n\r\n        <div className=\"summary-card users\">\r\n          <div className=\"card-content\">\r\n            <span className=\"card-value\">{totalRegularUsers}</span>\r\n            <span className=\"card-label\">Regular Users</span>\r\n          </div>\r\n          <div className=\"card-icon\">\r\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\r\n              <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\r\n              <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\r\n            </svg>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n","import React, { useState, useEffect, useCallback } from 'react';\nimport '../styles/Admin.css';\nimport '../styles/AdminResponsive.css';\nimport '../styles/UsersList.css';\nimport database from '../utils/database';\nimport UsersList from './UsersList';\nimport UsersSummary from './UsersSummary';\n\nexport default function Admin({ darkMode = true }) {\n  const [users, setUsers] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [activeTab, setActiveTab] = useState('users');\n  const [loading, setLoading] = useState(true);\n  const [showAllUsers, setShowAllUsers] = useState(true); // Changed to true to show all users by default\n  const [lastSaveTime, setLastSaveTime] = useState(null);\n  const [isAuthorized, setIsAuthorized] = useState(false);\n  const [showAddAdminForm, setShowAddAdminForm] = useState(false);\n  const [newAdmin, setNewAdmin] = useState({\n    email: '',\n    password: '',\n    name: ''\n  });\n  const [addAdminError, setAddAdminError] = useState('');\n  const [quickAdminEmail, setQuickAdminEmail] = useState('');\n\n  const checkAuthorization = useCallback(() => {\n    const savedAdminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    const defaultAdminEmails = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const adminEmails = savedAdminEmails.length > 0 ? savedAdminEmails : defaultAdminEmails;\n    \n    const currentUserEmail = localStorage.getItem('currentUserEmail');\n    \n    if (currentUserEmail && adminEmails.includes(currentUserEmail)) {\n      const allUsers = database.getUsers();\n      const userExists = allUsers.some(user => user.email === currentUserEmail);\n      \n      if (userExists) {\n        setIsAuthorized(true);\n        console.log('Authorization granted');\n      } else {\n        addProtectedAdmins();\n        setTimeout(() => {\n          setIsAuthorized(true);\n          console.log('Authorization granted after adding user');\n        }, 500);\n      }\n    } else {\n      console.log('User not in admin list, authorization denied');\n      setIsAuthorized(false);\n    }\n  }, []);\n\n  const loadData = useCallback(() => {\n    setLoading(true);\n    const allUsers = database.getUsers();\n    const allOrders = database.getOrders();\n    \n    const protectedAdmins = [\n      {\n        email: 'yahiapro400@gmail.com',\n        password: 'yahia2024',\n        name: 'Yahia Pro'\n      },\n      {\n        email: 'yahiacool2009@gmail.com',\n        password: 'yahia2009',\n        name: 'Yahia Cool'\n      }\n    ];\n\n    protectedAdmins.forEach(admin => {\n      const existingUser = allUsers.find(user => user.email === admin.email);\n      if (!existingUser) {\n        try {\n          database.registerUser({\n            email: admin.email,\n            password: admin.password,\n            name: admin.name\n          });\n          console.log(`Added protected admin: ${admin.email}`);\n        } catch (error) {\n          console.log(`Protected admin ${admin.email} already exists or error occurred:`, error.message);\n        }\n      }\n    });\n\n    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    protectedAdmins.forEach(admin => {\n      if (!adminEmails.includes(admin.email)) {\n        adminEmails.push(admin.email);\n      }\n    });\n    localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n    \n    const updatedUsers = database.getUsers();\n    \n    const savedAdminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    const defaultAdminEmails = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const finalAdminEmails = savedAdminEmails.length > 0 ? savedAdminEmails : defaultAdminEmails;\n    const filteredUsers = updatedUsers.filter(user => finalAdminEmails.includes(user.email));\n    \n    const usersToShow = showAllUsers ? updatedUsers : filteredUsers;\n    \n    setUsers(usersToShow);\n    setOrders(allOrders);\n    setLastSaveTime(database.getLastSaveTime());\n    setLoading(false);\n  }, [showAllUsers]);\n\n  useEffect(() => {\n    const initializeProtectedAdmins = () => {\n      const protectedAdmins = [\n        {\n          email: 'yahiapro400@gmail.com',\n          password: 'yahia2024',\n          name: 'Yahia Pro'\n        },\n        {\n          email: 'yahiacool2009@gmail.com',\n          password: 'yahia2009',\n          name: 'Yahia Cool'\n        }\n      ];\n\n      const allUsers = database.getUsers();\n      const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n\n      protectedAdmins.forEach(admin => {\n        const existingUser = allUsers.find(user => user.email === admin.email);\n        if (!existingUser) {\n          try {\n            database.registerUser({\n              email: admin.email,\n              password: admin.password,\n              name: admin.name\n            });\n            console.log(`Initialized protected admin: ${admin.email}`);\n          } catch (error) {\n            console.log(`Protected admin ${admin.email} already exists:`, error.message);\n          }\n        }\n\n        if (!adminEmails.includes(admin.email)) {\n          adminEmails.push(admin.email);\n        }\n      });\n\n      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n    };\n\n    initializeProtectedAdmins();\n    \n    setTimeout(() => {\n      checkAuthorization();\n    }, 100);\n    \n    loadData();\n  }, [checkAuthorization, loadData]);\n\n  useEffect(() => {\n    if (isAuthorized) {\n      loadData();\n    }\n  }, [showAllUsers, isAuthorized, loadData]);\n\n  const deleteUser = (userId) => {\n    const userToDelete = users.find(user => user.id === userId);\n    \n    if (!userToDelete) {\n      alert('User not found!');\n      return;\n    }\n\n    const protectedAdmins = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const currentUserEmail = localStorage.getItem('currentUserEmail');\n    \n    if (protectedAdmins.includes(userToDelete.email)) {\n      alert('❌ Cannot delete protected admin accounts!\\n\\nOnly yahiapro400@gmail.com and yahiacool2009@gmail.com can delete protected admins.');\n      return;\n    }\n\n    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    \n    if (adminEmails.includes(userToDelete.email) && !protectedAdmins.includes(currentUserEmail)) {\n      alert('❌ Only protected admins can delete other admin accounts!\\n\\nContact yahiapro400@gmail.com or yahiacool2009@gmail.com to delete admin accounts.');\n      return;\n    }\n\n    if (window.confirm(`Are you sure you want to delete user: ${userToDelete.email}?`)) {\n      const success = database.deleteUser(userId);\n      if (success) {\n        alert(`✅ User ${userToDelete.email} has been deleted successfully!`);\n        loadData();\n      } else {\n        alert('❌ Failed to delete user. Please try again.');\n      }\n    }\n  };\n\n  const handleEditUser = (user) => {\n    // التحقق من صلاحيات التعديل\n    const protectedAdmins = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const currentUserEmail = localStorage.getItem('currentUserEmail');\n    \n    if (protectedAdmins.includes(user.email) && !protectedAdmins.includes(currentUserEmail)) {\n      alert('❌ Only protected admins can edit admin accounts!\\n\\nContact yahiapro400@gmail.com or yahiacool2009@gmail.com for changes.');\n      return;\n    }\n\n    // هنا يمكنك إضافة منطق تعديل المستخدم\n    // مثل فتح نافذة منبثقة للتعديل\n  };\n\n  const handleDeleteUser = (user) => {\n    const userId = user.id || users.find(u => u.email === user.email)?.id;\n    if (userId) {\n      deleteUser(userId);\n    } else {\n      alert('Could not find user ID');\n    }\n  };\n\n  const rejectOrder = (orderId) => {\n    const orderToReject = orders.find(order => order.id === orderId);\n    if (!orderToReject) return;\n\n    const updatedOrders = orders.map(order =>\n      order.id === orderId ? { ...order, status: 'rejected' } : order\n    );\n    setOrders(updatedOrders);\n    localStorage.setItem('ecommerce_orders', JSON.stringify(updatedOrders));\n    \n    addRejectionNotification(orderToReject);\n    alert(`Order #${orderToReject.orderNumber} has been rejected.`);\n  };\n\n  const approveOrder = (orderId) => {\n    const updatedOrders = orders.map(order =>\n      order.id === orderId ? { ...order, status: 'approved' } : order\n    );\n    setOrders(updatedOrders);\n    localStorage.setItem('ecommerce_orders', JSON.stringify(updatedOrders));\n    alert('Order has been approved.');\n  };\n\n  const deleteOrder = (orderId) => {\n    const orderToDelete = orders.find(order => order.id === orderId);\n    if (!orderToDelete) return;\n\n    if (window.confirm(`Are you sure you want to delete order #${orderToDelete.orderNumber}?`)) {\n      const updatedOrders = orders.filter(order => order.id !== orderId);\n      setOrders(updatedOrders);\n      localStorage.setItem('ecommerce_orders', JSON.stringify(updatedOrders));\n      \n      addDeletionNotification(orderToDelete);\n      restoreProductQuantities(orderToDelete);\n      alert(`Order #${orderToDelete.orderNumber} has been deleted.`);\n    }\n  };\n\n  const addRejectionNotification = (order) => {\n    const notifications = JSON.parse(localStorage.getItem('order_notifications') || '[]');\n    const notification = {\n      id: Date.now(),\n      type: 'rejection',\n      message: `Your order #${order.orderNumber} has been rejected.`,\n      date: new Date().toISOString(),\n      userEmail: order.userEmail,\n      read: false\n    };\n    notifications.push(notification);\n    localStorage.setItem('order_notifications', JSON.stringify(notifications));\n  };\n\n  const addDeletionNotification = (order) => {\n    const notifications = JSON.parse(localStorage.getItem('order_notifications') || '[]');\n    const notification = {\n      id: Date.now(),\n      type: 'deletion',\n      message: `Your order #${order.orderNumber} has been deleted.`,\n      date: new Date().toISOString(),\n      userEmail: order.userEmail,\n      read: false\n    };\n    notifications.push(notification);\n    localStorage.setItem('order_notifications', JSON.stringify(notifications));\n  };\n\n  const restoreProductQuantities = (order) => {\n    try {\n      const existingProducts = JSON.parse(localStorage.getItem('ecommerce_products') || '[]');\n      \n      order.items.forEach(item => {\n        const productIndex = existingProducts.findIndex(p => p.id === item.id);\n        if (productIndex !== -1) {\n          existingProducts[productIndex].quantity += item.quantity;\n        }\n      });\n      \n      localStorage.setItem('ecommerce_products', JSON.stringify(existingProducts));\n      console.log('Product quantities restored after order deletion');\n    } catch (error) {\n      console.error('Error restoring product quantities:', error);\n    }\n  };\n\n  const clearDatabase = () => {\n    if (window.confirm('Are you sure you want to clear all data? This action cannot be undone!')) {\n      database.clearDatabase();\n      setUsers([]);\n      setOrders([]);\n      alert('All data has been cleared.');\n    }\n  };\n\n  const addProtectedAdmins = () => {\n    try {\n      const protectedAdmins = [\n        {\n          email: 'yahiapro400@gmail.com',\n          password: 'yahia2024',\n          name: 'Yahia Pro'\n        },\n        {\n          email: 'yahiacool2009@gmail.com',\n          password: 'yahia2009',\n          name: 'Yahia Cool'\n        }\n      ];\n\n      const users = JSON.parse(localStorage.getItem('ecommerce_users') || '[]');\n      const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n      let addedCount = 0;\n\n      protectedAdmins.forEach(admin => {\n        const existingUser = users.find(user => user.email === admin.email);\n        if (!existingUser) {\n          const newAdminUser = {\n            id: Date.now() + Math.random(),\n            email: admin.email,\n            password: admin.password,\n            name: admin.name,\n            createdAt: new Date().toISOString(),\n            orders: []\n          };\n\n          users.push(newAdminUser);\n          addedCount++;\n\n          if (!adminEmails.includes(admin.email)) {\n            adminEmails.push(admin.email);\n          }\n        } else {\n          if (!adminEmails.includes(admin.email)) {\n            adminEmails.push(admin.email);\n            addedCount++;\n          }\n        }\n      });\n\n      localStorage.setItem('ecommerce_users', JSON.stringify(users));\n      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n\n      if (addedCount > 0) {\n        alert(`✅ Added ${addedCount} protected admin(s) successfully!`);\n      } else {\n        alert('ℹ️ Protected admins already exist.');\n      }\n    } catch (error) {\n      alert('Error adding protected admins: ' + error.message);\n    }\n  };\n\n  const fixLoginIssues = () => {\n    if (window.confirm('🔧 Fix login issues?\\n\\nThis will:\\n• Reset protected admin accounts\\n• Ensure correct passwords\\n• Fix any corrupted data\\n\\nContinue?')) {\n      try {\n        const success = database.resetProtectedAdmins();\n        if (success) {\n          alert('✅ Login issues fixed successfully!\\n\\nYou can now login with:\\n• yahiapro400@gmail.com / yahia2024\\n• yahiacool2009@gmail.com / yahia2009');\n          loadData();\n        } else {\n          alert('❌ Failed to fix login issues. Please try again.');\n        }\n      } catch (error) {\n        alert('❌ Error fixing login issues: ' + error.message);\n      }\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const formatShortDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  if (!isAuthorized) {\n    return (\n      <div className={`admin-container ${darkMode ? 'dark-mode' : ''}`}>\n        <div className=\"unauthorized\">\n          <div className=\"unauthorized-content\">\n            <h1>Access Denied</h1>\n            <p>You are not authorized to access the admin dashboard.</p>\n            <p>Only authorized admin accounts can access this page.</p>\n            <div className=\"unauthorized-info\">\n              <h3>Authorized Admin Accounts:</h3>\n              <ul>\n                <li>yahiapro400@gmail.com</li>\n                <li>yahiacool2009@gmail.com</li>\n              </ul>\n            </div>\n            <div className=\"unauthorized-actions\">\n              <button \n                className=\"add-protected-admins-btn\"\n                onClick={() => {\n                  addProtectedAdmins();\n                  setTimeout(() => {\n                    checkAuthorization();\n                  }, 1000);\n                }}\n              >\n                Add Protected Admins\n              </button>\n              <button \n                className=\"fix-login-btn\"\n                onClick={fixLoginIssues}\n              >\n                🔧 Fix Login Issues\n              </button>\n              <button \n                className=\"fix-access-btn\"\n                onClick={() => {\n                  const currentUserEmail = localStorage.getItem('currentUserEmail');\n                  if (currentUserEmail) {\n                    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n                    if (!adminEmails.includes(currentUserEmail)) {\n                      adminEmails.push(currentUserEmail);\n                      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n                    }\n                    const users = database.getUsers();\n                    const userExists = users.some(user => user.email === currentUserEmail);\n                    if (!userExists) {\n                      database.registerUser({\n                        email: currentUserEmail,\n                        password: 'admin123',\n                        name: currentUserEmail.split('@')[0]\n                      });\n                    }\n                    setTimeout(() => {\n                      checkAuthorization();\n                    }, 500);\n                    alert(`تم إضافة ${currentUserEmail} كمدير بنجاح!`);\n                  } else {\n                    alert('يرجى تسجيل الدخول أولاً');\n                  }\n                }}\n              >\n                إصلاح الوصول\n              </button>\n              <button \n                className=\"back-btn\" \n                onClick={() => window.history.back()}\n              >\n                Go Back\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className={`admin-container ${darkMode ? 'dark-mode' : ''}`}>\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n          <p>Loading data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`admin-container ${darkMode ? 'dark-mode' : ''}`}>\n      <div className=\"admin-header\">\n        <h1>Admin Dashboard</h1>\n        <p>Welcome back, Admin! Manage your e-commerce platform.</p>\n        <div className=\"admin-stats\">\n          <div className=\"stat-card\">\n            <span className=\"stat-icon\">👤</span>\n            <h3>{users.length}</h3>\n            <p>Total Users</p>\n          </div>\n          <div className=\"stat-card\">\n            <span className=\"stat-icon\">🛒</span>\n            <h3>{orders.length}</h3>\n            <p>Total Orders</p>\n          </div>\n          <div className=\"stat-card\">\n            <span className=\"stat-icon\">🛡️</span>\n            <h3>{users.filter(u => ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(u.email)).length}</h3>\n            <p>Protected Admins</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"admin-tabs\">\n        <button \n          className={`tab-btn ${activeTab === 'users' ? 'active' : ''}`}\n          onClick={() => setActiveTab('users')}\n        >\n          Users Management\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'orders' ? 'active' : ''}`}\n          onClick={() => setActiveTab('orders')}\n        >\n          Orders Management\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'manage-admins' ? 'active' : ''}`}\n          onClick={() => setActiveTab('manage-admins')}\n        >\n          Manage Admins\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'stats' ? 'active' : ''}`}\n          onClick={() => setActiveTab('stats')}\n        >\n          📊 Advanced Stats\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'analytics' ? 'active' : ''}`}\n          onClick={() => setActiveTab('analytics')}\n        >\n          📈 Analytics\n        </button>\n\n      </div>\n\n      <div className=\"admin-content\">\n        {activeTab === 'users' && (\n          <div className=\"users-section\">\n            <UsersSummary \n              users={users}\n              adminEmails={JSON.parse(localStorage.getItem('admin_emails') || '[]')}\n            />\n            <UsersList \n              users={users}\n              onEditUser={handleEditUser}\n              onDeleteUser={handleDeleteUser}\n              adminEmails={JSON.parse(localStorage.getItem('admin_emails') || '[]')}\n            />\n            \n            {users.length === 0 ? (\n              <div className=\"no-data\">\n                <p>No users found</p>\n              </div>\n            ) : (\n              <div className=\"users-list\">\n                <div className=\"users-summary\">\n                  <h3>📊 Users Summary</h3>\n                  <p>Total Users: <strong>{users.length}</strong></p>\n                  <p>Protected Admins: <strong>{users.filter(u => ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(u.email)).length}</strong></p>\n                  <p>Regular Users: <strong>{users.filter(u => !['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(u.email)).length}</strong></p>\n                </div>\n                \n                {users.map((user, index) => {\n                  const isProtected = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(user.email);\n                  const isAdmin = JSON.parse(localStorage.getItem('admin_emails') || '[]').includes(user.email);\n                  return (\n                    <div key={user.id} className={`user-card ${isProtected ? 'protected' : ''} ${isAdmin ? 'admin' : 'regular'}`}>\n                      <div className=\"user-info\">\n                        <div className=\"user-header\">\n                          <h3>\n                            #{index + 1} - {user.name}\n                            {isProtected && <span className=\"protected-badge\">🛡️ Protected Admin</span>}\n                            {isAdmin && !isProtected && <span className=\"admin-badge\">👑 Admin</span>}\n                            {!isAdmin && <span className=\"user-badge\">👤 User</span>}\n                          </h3>\n                        </div>\n                        <p className=\"user-email\"><strong>Email:</strong> {user.email}</p>\n                        <p className=\"user-date\"><strong>Registration Date:</strong> {formatDate(user.createdAt)}</p>\n                        <p className=\"user-orders\"><strong>Number of Orders:</strong> {user.orders?.length || 0}</p>\n                        <p className=\"user-id\"><strong>User ID:</strong> {user.id}</p>\n                        {user.password && (\n                          <p className=\"user-password\"><strong>Password:</strong> {user.password}</p>\n                        )}\n                      </div>\n                      <div className=\"user-actions\">\n                        {!isProtected && (\n                          <button \n                            className=\"delete-btn\"\n                            onClick={() => deleteUser(user.id)}\n                          >\n                            Delete\n                          </button>\n                        )}\n                        {isProtected && (\n                          <span className=\"protected-message\">Protected Admin - Cannot Delete</span>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'orders' && (\n          <div className=\"orders-section\">\n            <div className=\"section-header\">\n              <h2>Orders Management</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Refresh Data\n              </button>\n            </div>\n            \n            {orders.length === 0 ? (\n              <div className=\"no-data\">\n                <p>No orders found</p>\n              </div>\n            ) : (\n              <div className=\"orders-list\">\n                {orders.map((order) => (\n                  <div key={order.id} className=\"order-card\">\n                    <div className=\"order-info\">\n                      <h3>Order #{order.orderNumber}</h3>\n                      <p className=\"order-email font-weight-bold\">{order.userEmail}</p>\n                      <p className=\"order-date font-weight-bold\">Order Date: {formatDate(order.date)}</p>\n                      <p className=\"order-status font-weight-bold\">Status: {order.status}</p>\n                      <p className=\"order-total font-weight-bold\">Total: ${order.total.toFixed(2)}</p>\n                      <p className=\"order-items font-weight-bold\">Number of Items: {order.items.length}</p>\n                      {order.shipping && Object.keys(order.shipping).length > 0 && (\n                        <div className=\"shipping-info\">\n                          <h4>Shipping Details:</h4>\n                          <p><strong>Name:</strong> {order.shipping.fullName}</p>\n                          <p><strong>Phone:</strong> {order.shipping.phone}</p>\n                          <p><strong>Address:</strong> {order.shipping.street}, {order.shipping.building}</p>\n                          <p><strong>Address Inside Country:</strong> {order.shipping.addressInCountry}</p>\n                          <p><strong>City:</strong> {order.shipping.city}, {order.shipping.governorate}</p>\n                          {order.shipping.additionalInfo && (\n                            <p><strong>Notes:</strong> {order.shipping.additionalInfo}</p>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"order-items\">\n                      {order.items.map((item, index) => (\n                        <div key={index} className=\"order-item\">\n                          <div className=\"item-image\">\n                            <img src={item.image} alt={item.name} />\n                          </div>\n                          <div className=\"item-details\">\n                            <h4>{item.name}</h4>\n                            <p className=\"item-price\">${item.price}</p>\n                            <p className=\"item-quantity\">Quantity Sold: {item.quantity}</p>\n                            <p className=\"item-total\">Total: ${(item.price * item.quantity).toFixed(2)}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"order-actions\">\n                      {order.status !== 'rejected' && order.status !== 'approved' && (\n                        <button \n                          className=\"reject-btn\"\n                          onClick={() => rejectOrder(order.id)}\n                        >\n                          Reject Order\n                        </button>\n                      )}\n                      {order.status === 'rejected' && (\n                        <div className=\"order-actions\">\n                          <span className=\"rejected-status\">Rejected</span>\n                          <button \n                            className=\"approve-btn\"\n                            onClick={() => approveOrder(order.id)}\n                          >\n                            Re-activate\n                          </button>\n                        </div>\n                      )}\n                      {order.status === 'approved' && (\n                        <span className=\"approved-status\">Approved</span>\n                      )}\n                      <button \n                        className=\"delete-order-btn\"\n                        onClick={() => deleteOrder(order.id)}\n                      >\n                        Delete Order\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'stats' && (\n          <div className=\"stats-section\">\n            <div className=\"section-header\">\n              <h2>📊 Advanced Statistics</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Refresh Stats\n              </button>\n            </div>\n            \n            <div className=\"stats-grid\">\n              <div className=\"stats-card\">\n                <h3>📈 Revenue Analytics</h3>\n                <div className=\"revenue-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Total Revenue</span>\n                    <span className=\"stat-value\">${orders.reduce((total, order) => total + order.total, 0).toFixed(2)}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Average Order Value</span>\n                    <span className=\"stat-value\">${orders.length > 0 ? (orders.reduce((total, order) => total + order.total, 0) / orders.length).toFixed(2) : '0.00'}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Orders This Month</span>\n                    <span className=\"stat-value\">{orders.filter(order => {\n                      const orderDate = new Date(order.date);\n                      const now = new Date();\n                      return orderDate.getMonth() === now.getMonth() && orderDate.getFullYear() === now.getFullYear();\n                    }).length}</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"stats-card\">\n                <h3>👥 User Analytics</h3>\n                <div className=\"user-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Total Users</span>\n                    <span className=\"stat-value\">{users.length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Active Users</span>\n                    <span className=\"stat-value\">{users.filter(user => user.orders && user.orders.length > 0).length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">New Users This Month</span>\n                    <span className=\"stat-value\">{users.filter(user => {\n                      const userDate = new Date(user.createdAt);\n                      const now = new Date();\n                      return userDate.getMonth() === now.getMonth() && userDate.getFullYear() === now.getFullYear();\n                    }).length}</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"stats-card\">\n                <h3>🛒 Order Status</h3>\n                <div className=\"order-status-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Pending Orders</span>\n                    <span className=\"stat-value\">{orders.filter(order => order.status === 'pending').length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Approved Orders</span>\n                    <span className=\"stat-value\">{orders.filter(order => order.status === 'approved').length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Rejected Orders</span>\n                    <span className=\"stat-value\">{orders.filter(order => order.status === 'rejected').length}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'manage-admins' && (\n          <div className=\"manage-admins-section\">\n            <div className=\"section-header\">\n              <h2>👥 Manage Admins</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Refresh Data\n              </button>\n            </div>\n            \n            <div className=\"add-admin-form\">\n              <h3>Add New Admin</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"adminEmail\">Admin Email:</label>\n                <input\n                  type=\"email\"\n                  id=\"adminEmail\"\n                  className=\"admin-input\"\n                  placeholder=\"Enter admin email\"\n                  value={newAdmin.email}\n                  onChange={(e) => setNewAdmin({...newAdmin, email: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"adminPassword\">Password:</label>\n                <input\n                  type=\"password\"\n                  id=\"adminPassword\"\n                  className=\"admin-input\"\n                  placeholder=\"Enter password\"\n                  value={newAdmin.password}\n                  onChange={(e) => setNewAdmin({...newAdmin, password: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"adminName\">Name:</label>\n                <input\n                  type=\"text\"\n                  id=\"adminName\"\n                  className=\"admin-input\"\n                  placeholder=\"Enter admin name\"\n                  value={newAdmin.name}\n                  onChange={(e) => setNewAdmin({...newAdmin, name: e.target.value})}\n                />\n              </div>\n              <button className=\"add-admin-btn\" onClick={() => {\n                if (newAdmin.email && newAdmin.password && newAdmin.name) {\n                  try {\n                    database.registerUser(newAdmin);\n                    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n                    if (!adminEmails.includes(newAdmin.email)) {\n                      adminEmails.push(newAdmin.email);\n                      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n                    }\n                    setNewAdmin({ email: '', password: '', name: '' });\n                    alert('Admin added successfully!');\n                    loadData();\n                  } catch (error) {\n                    alert('Error adding admin: ' + error.message);\n                  }\n                } else {\n                  alert('Please fill all fields');\n                }\n              }}>\n                Add Admin\n              </button>\n              {addAdminError && <div className=\"admin-message error\">{addAdminError}</div>}\n            </div>\n\n            <div className=\"current-admins\">\n              <h3>Current Admins</h3>\n              <div className=\"admins-list\">\n                {(() => {\n                  const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n                  const defaultAdmins = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n                  const allAdmins = adminEmails.length > 0 ? adminEmails : defaultAdmins;\n                  \n                  return allAdmins.map((email, index) => (\n                    <div key={index} className=\"admin-item\">\n                      <span className=\"admin-email\">{email}</span>\n                      <span className=\"admin-status\">Active</span>\n                    </div>\n                  ));\n                })()}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'analytics' && (\n          <div className=\"analytics-section\">\n            <div className=\"section-header\">\n              <h2>📈 Real-time Analytics</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Update Analytics\n              </button>\n            </div>\n            \n            <div className=\"analytics-grid\">\n              <div className=\"analytics-card\">\n                <h3>🔥 Top Performing Products</h3>\n                <div className=\"top-products\">\n                  {(() => {\n                    const productStats = {};\n                    orders.forEach(order => {\n                      order.items.forEach(item => {\n                        if (!productStats[item.name]) {\n                          productStats[item.name] = { quantity: 0, revenue: 0 };\n                        }\n                        productStats[item.name].quantity += item.quantity;\n                        productStats[item.name].revenue += item.price * item.quantity;\n                      });\n                    });\n                    \n                    const topProducts = Object.entries(productStats)\n                      .sort(([,a], [,b]) => b.revenue - a.revenue)\n                      .slice(0, 5);\n                    \n                    return topProducts.map(([name, stats], index) => (\n                      <div key={name} className=\"product-stat\">\n                        <span className=\"rank\">#{index + 1}</span>\n                        <span className=\"name\">{name}</span>\n                        <span className=\"quantity\">Sold: {stats.quantity}</span>\n                        <span className=\"revenue\">${stats.revenue.toFixed(2)}</span>\n                      </div>\n                    ));\n                  })()}\n                </div>\n              </div>\n\n              <div className=\"analytics-card\">\n                <h3>📅 Recent Activity</h3>\n                <div className=\"recent-activity\">\n                  {orders.slice(0, 5).map(order => (\n                    <div key={order.id} className=\"activity-item\">\n                      <span className=\"activity-icon\">🛒</span>\n                      <span className=\"activity-text\">Order #{order.orderNumber} - ${order.total.toFixed(2)}</span>\n                      <span className=\"activity-time\">{formatShortDate(order.date)}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"analytics-card\">\n                <h3>🎯 Quick Actions</h3>\n                <div className=\"quick-actions\">\n                  <button className=\"quick-action-btn\" onClick={() => setActiveTab('users')}>\n                    👥 Manage Users\n                  </button>\n                  <button className=\"quick-action-btn\" onClick={() => setActiveTab('orders')}>\n                    📦 View Orders\n                  </button>\n                  <button className=\"quick-action-btn\" onClick={clearDatabase}>\n                    🗑️ Clear Database\n                  </button>\n                  <button className=\"quick-action-btn\" onClick={addProtectedAdmins}>\n                    🛡️ Add Protected Admins\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n\n      </div>\n    </div>\n  );\n} "],"names":["UsersList","_ref","users","onEditUser","onDeleteUser","adminEmails","searchTerm","setSearchTerm","useState","filter","setFilter","filteredUsers","user","_user$name","_user$email","matchesSearch","name","toLowerCase","includes","email","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","map","date","joinDate","Date","toLocaleDateString","year","month","day","onClick","UsersSummary","totalUsers","length","totalAdmins","totalRegularUsers","xmlns","viewBox","fill","stroke","strokeWidth","d","cx","cy","r","x","y","width","height","Admin","darkMode","setUsers","orders","setOrders","activeTab","setActiveTab","loading","setLoading","showAllUsers","setShowAllUsers","lastSaveTime","setLastSaveTime","isAuthorized","setIsAuthorized","showAddAdminForm","setShowAddAdminForm","newAdmin","setNewAdmin","password","addAdminError","setAddAdminError","quickAdminEmail","setQuickAdminEmail","checkAuthorization","useCallback","savedAdminEmails","JSON","parse","localStorage","getItem","currentUserEmail","database","getUsers","some","console","log","addProtectedAdmins","setTimeout","loadData","allUsers","allOrders","getOrders","protectedAdmins","forEach","admin","find","registerUser","error","message","push","setItem","stringify","updatedUsers","finalAdminEmails","getLastSaveTime","useEffect","initializeProtectedAdmins","deleteUser","userId","userToDelete","id","alert","window","confirm","addRejectionNotification","order","notifications","notification","now","orderNumber","toISOString","userEmail","read","addDeletionNotification","restoreProductQuantities","existingProducts","items","item","productIndex","findIndex","p","quantity","addedCount","newAdminUser","Math","random","createdAt","fixLoginIssues","resetProtectedAdmins","formatDate","dateString","hour","minute","u","_users$find","index","_user$orders","isProtected","isAdmin","status","total","toFixed","shipping","Object","keys","fullName","phone","street","building","addressInCountry","city","governorate","additionalInfo","src","image","alt","price","orderId","orderToReject","updatedOrders","rejectOrder","approveOrder","orderToDelete","deleteOrder","reduce","orderDate","getMonth","getFullYear","userDate","htmlFor","productStats","revenue","entries","sort","_ref2","_ref3","a","b","slice","_ref4","stats","clearDatabase","split","history","back"],"sourceRoot":""}