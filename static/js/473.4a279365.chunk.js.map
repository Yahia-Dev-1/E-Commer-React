{"version":3,"file":"static/js/473.4a279365.chunk.js","mappings":"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","sources":["components/CategoryManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport '../styles/CategoryManagement.css';\r\n\r\nexport default function CategoryManagement({ darkMode = true }) {\r\n  const [categories, setCategories] = useState([]);\r\n  const [newCategory, setNewCategory] = useState('');\r\n  const [editingCategory, setEditingCategory] = useState(null);\r\n  const [editName, setEditName] = useState('');\r\n\r\n  useEffect(() => {\r\n    loadCategories();\r\n  }, []);\r\n\r\n  const loadCategories = () => {\r\n    try {\r\n      const savedCategories = JSON.parse(localStorage.getItem('ecommerce_categories') || '[]');\r\n      if (savedCategories.length === 0) {\r\n        // Default categories if none exist\r\n        const defaultCategories = [\r\n          'Electronics',\r\n          'Clothing',\r\n          'Books',\r\n          'Home & Garden',\r\n          'Sports',\r\n          'Beauty',\r\n          'Toys',\r\n          'Other'\r\n        ];\r\n        setCategories(defaultCategories);\r\n        localStorage.setItem('ecommerce_categories', JSON.stringify(defaultCategories));\r\n      } else {\r\n        setCategories(savedCategories);\r\n      }\r\n    } catch (error) {\r\n      console.error('Error loading categories:', error);\r\n      setCategories([]);\r\n    }\r\n  };\r\n\r\n  const addCategory = () => {\r\n    if (!newCategory.trim()) {\r\n      alert('Please enter a category name');\r\n      return;\r\n    }\r\n\r\n    if (categories.includes(newCategory.trim())) {\r\n      alert('Category already exists');\r\n      return;\r\n    }\r\n\r\n    const updatedCategories = [...categories, newCategory.trim()];\r\n    setCategories(updatedCategories);\r\n    localStorage.setItem('ecommerce_categories', JSON.stringify(updatedCategories));\r\n    setNewCategory('');\r\n    alert('Category added successfully!');\r\n  };\r\n\r\n  const deleteCategory = (categoryName) => {\r\n    if (window.confirm(`Are you sure you want to delete \"${categoryName}\"?`)) {\r\n      const updatedCategories = categories.filter(cat => cat !== categoryName);\r\n      setCategories(updatedCategories);\r\n      localStorage.setItem('ecommerce_categories', JSON.stringify(updatedCategories));\r\n      alert('Category deleted successfully!');\r\n    }\r\n  };\r\n\r\n  const startEdit = (categoryName) => {\r\n    setEditingCategory(categoryName);\r\n    setEditName(categoryName);\r\n  };\r\n\r\n  const saveEdit = () => {\r\n    if (!editName.trim()) {\r\n      alert('Please enter a category name');\r\n      return;\r\n    }\r\n\r\n    if (categories.includes(editName.trim()) && editName.trim() !== editingCategory) {\r\n      alert('Category already exists');\r\n      return;\r\n    }\r\n\r\n    const updatedCategories = categories.map(cat => \r\n      cat === editingCategory ? editName.trim() : cat\r\n    );\r\n    setCategories(updatedCategories);\r\n    localStorage.setItem('ecommerce_categories', JSON.stringify(updatedCategories));\r\n    setEditingCategory(null);\r\n    setEditName('');\r\n    alert('Category updated successfully!');\r\n  };\r\n\r\n  const cancelEdit = () => {\r\n    setEditingCategory(null);\r\n    setEditName('');\r\n  };\r\n\r\n  const getCategoryStats = () => {\r\n    try {\r\n      const products = JSON.parse(localStorage.getItem('ecommerce_products') || '[]');\r\n      const stats = {};\r\n      categories.forEach(category => {\r\n        stats[category] = products.filter(product => product.category === category).length;\r\n      });\r\n      return stats;\r\n    } catch (error) {\r\n      console.error('Error getting category stats:', error);\r\n      return {};\r\n    }\r\n  };\r\n\r\n  const categoryStats = getCategoryStats();\r\n\r\n  return (\r\n    <div className={`category-management-container ${darkMode ? 'dark-mode' : ''}`}>\r\n      <div className=\"category-header\">\r\n        <div className=\"header-content\">\r\n          <div className=\"header-text\">\r\n            <h1>Category Management</h1>\r\n            <p>Manage your product categories</p>\r\n          </div>\r\n          <button \r\n            className=\"back-btn\"\r\n            onClick={() => window.location.href = '/add-products'}\r\n            style={{\r\n              background: 'linear-gradient(135deg, #28a745 0%, #20c997 100%)',\r\n              marginLeft: '10px'\r\n            }}\r\n          >\r\n            ðŸ”™ Back to Add Products\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"category-form\">\r\n        <h2>Add New Category</h2>\r\n        <div className=\"form-group\">\r\n          <label htmlFor=\"newCategory\">Category Name:</label>\r\n          <input\r\n            type=\"text\"\r\n            id=\"newCategory\"\r\n            value={newCategory}\r\n            onChange={(e) => setNewCategory(e.target.value)}\r\n            placeholder=\"Enter category name\"\r\n            onKeyPress={(e) => e.key === 'Enter' && addCategory()}\r\n          />\r\n          <button onClick={addCategory} className=\"add-btn\">\r\n            Add Category\r\n          </button>\r\n        </div>\r\n      </div>\r\n\r\n      <div className=\"categories-list\">\r\n        <h2>Current Categories ({categories.length})</h2>\r\n        {categories.length === 0 ? (\r\n          <p className=\"no-categories\">No categories found.</p>\r\n        ) : (\r\n          <div className=\"categories-grid\">\r\n            {categories.map((category, index) => (\r\n              <div key={index} className=\"category-card\">\r\n                <div className=\"category-info\">\r\n                  {editingCategory === category ? (\r\n                    <div className=\"edit-form\">\r\n                      <input\r\n                        type=\"text\"\r\n                        value={editName}\r\n                        onChange={(e) => setEditName(e.target.value)}\r\n                        onKeyPress={(e) => e.key === 'Enter' && saveEdit()}\r\n                      />\r\n                      <div className=\"edit-actions\">\r\n                        <button onClick={saveEdit} className=\"save-btn\">\r\n                          Save\r\n                        </button>\r\n                        <button onClick={cancelEdit} className=\"cancel-btn\">\r\n                          Cancel\r\n                        </button>\r\n                      </div>\r\n                    </div>\r\n                  ) : (\r\n                    <>\r\n                      <h3>{category}</h3>\r\n                      <p className=\"category-count\">\r\n                        Products: {categoryStats[category] || 0}\r\n                      </p>\r\n                    </>\r\n                  )}\r\n                </div>\r\n                <div className=\"category-actions\">\r\n                  {editingCategory !== category && (\r\n                    <>\r\n                      <button \r\n                        className=\"edit-btn\"\r\n                        onClick={() => startEdit(category)}\r\n                      >\r\n                        Edit\r\n                      </button>\r\n                      <button \r\n                        className=\"delete-btn\"\r\n                        onClick={() => deleteCategory(category)}\r\n                      >\r\n                        Delete\r\n                      </button>\r\n                    </>\r\n                  )}\r\n                </div>\r\n              </div>\r\n            ))}\r\n          </div>\r\n        )}\r\n      </div>\r\n\r\n      <div className=\"category-stats\">\r\n        <h2>Category Statistics</h2>\r\n        <div className=\"stats-grid\">\r\n          <div className=\"stat-card\">\r\n            <h3>Total Categories</h3>\r\n            <p>{categories.length}</p>\r\n          </div>\r\n          <div className=\"stat-card\">\r\n            <h3>Total Products</h3>\r\n            <p>{Object.values(categoryStats).reduce((sum, count) => sum + count, 0)}</p>\r\n          </div>\r\n          <div className=\"stat-card\">\r\n            <h3>Most Popular Category</h3>\r\n            <p>\r\n              {(() => {\r\n                const entries = Object.entries(categoryStats);\r\n                if (entries.length === 0) return 'None';\r\n                const maxEntry = entries.reduce((max, current) => \r\n                  current[1] > max[1] ? current : max\r\n                );\r\n                return maxEntry[1] > 0 ? maxEntry[0] : 'None';\r\n              })()}\r\n            </p>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n} "],"names":["CategoryManagement","_ref","darkMode","categories","setCategories","useState","newCategory","setNewCategory","editingCategory","setEditingCategory","editName","setEditName","useEffect","loadCategories","savedCategories","JSON","parse","localStorage","getItem","length","defaultCategories","setItem","stringify","error","console","addCategory","trim","alert","includes","updatedCategories","saveEdit","map","cat","cancelEdit","categoryStats","getCategoryStats","products","stats","forEach","category","filter","product","_jsxs","className","children","_jsx","onClick","window","location","href","style","background","marginLeft","htmlFor","type","id","value","onChange","e","target","placeholder","onKeyPress","key","index","_Fragment","startEdit","categoryName","confirm","deleteCategory","Object","values","reduce","sum","count","entries","maxEntry","max","current"],"sourceRoot":""}