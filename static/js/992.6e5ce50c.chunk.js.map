{"version":3,"file":"static/js/992.6e5ce50c.chunk.js","mappings":"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","sources":["components/Admin.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/Admin.css';\nimport database from '../utils/database';\n\nexport default function Admin({ darkMode = true }) {\n  const [users, setUsers] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [activeTab, setActiveTab] = useState('users');\n  const [loading, setLoading] = useState(true);\n  const [showAllUsers, setShowAllUsers] = useState(false);\n  const [lastSaveTime, setLastSaveTime] = useState(null);\n  const [isAuthorized, setIsAuthorized] = useState(false);\n  const [showAddAdminForm, setShowAddAdminForm] = useState(false);\n  const [newAdmin, setNewAdmin] = useState({\n    email: '',\n    password: '',\n    name: ''\n  });\n  const [addAdminError, setAddAdminError] = useState('');\n  const [quickAdminEmail, setQuickAdminEmail] = useState('');\n\n  useEffect(() => {\n    const initializeProtectedAdmins = () => {\n      const protectedAdmins = [\n        {\n          email: 'yahiapro400@gmail.com',\n          password: 'yahia2024',\n          name: 'Yahia Pro'\n        },\n        {\n          email: 'yahiacool2009@gmail.com',\n          password: 'yahia2009',\n          name: 'Yahia Cool'\n        }\n      ];\n\n      const allUsers = database.getUsers();\n      const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n\n      protectedAdmins.forEach(admin => {\n        const existingUser = allUsers.find(user => user.email === admin.email);\n        if (!existingUser) {\n          try {\n            database.registerUser({\n              email: admin.email,\n              password: admin.password,\n              name: admin.name\n            });\n            console.log(`Initialized protected admin: ${admin.email}`);\n          } catch (error) {\n            console.log(`Protected admin ${admin.email} already exists:`, error.message);\n          }\n        }\n\n        if (!adminEmails.includes(admin.email)) {\n          adminEmails.push(admin.email);\n        }\n      });\n\n      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n    };\n\n    initializeProtectedAdmins();\n    \n    setTimeout(() => {\n      checkAuthorization();\n    }, 100);\n    \n    loadData();\n  }, []);\n\n  useEffect(() => {\n    if (isAuthorized) {\n      loadData();\n    }\n  }, [showAllUsers, isAuthorized]);\n\n  const checkAuthorization = () => {\n    const savedAdminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    const defaultAdminEmails = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const adminEmails = savedAdminEmails.length > 0 ? savedAdminEmails : defaultAdminEmails;\n    \n    const currentUserEmail = localStorage.getItem('currentUserEmail');\n    \n    if (currentUserEmail && adminEmails.includes(currentUserEmail)) {\n      const allUsers = database.getUsers();\n      const userExists = allUsers.some(user => user.email === currentUserEmail);\n      \n      if (userExists) {\n        setIsAuthorized(true);\n        console.log('Authorization granted');\n      } else {\n        addProtectedAdmins();\n        setTimeout(() => {\n          setIsAuthorized(true);\n          console.log('Authorization granted after adding user');\n        }, 500);\n      }\n    } else {\n      console.log('User not in admin list, authorization denied');\n      setIsAuthorized(false);\n    }\n  };\n\n  const loadData = () => {\n    setLoading(true);\n    const allUsers = database.getUsers();\n    const allOrders = database.getOrders();\n    \n    const protectedAdmins = [\n      {\n        email: 'yahiapro400@gmail.com',\n        password: 'yahia2024',\n        name: 'Yahia Pro'\n      },\n      {\n        email: 'yahiacool2009@gmail.com',\n        password: 'yahia2009',\n        name: 'Yahia Cool'\n      }\n    ];\n\n    protectedAdmins.forEach(admin => {\n      const existingUser = allUsers.find(user => user.email === admin.email);\n      if (!existingUser) {\n        try {\n          database.registerUser({\n            email: admin.email,\n            password: admin.password,\n            name: admin.name\n          });\n          console.log(`Added protected admin: ${admin.email}`);\n        } catch (error) {\n          console.log(`Protected admin ${admin.email} already exists or error occurred:`, error.message);\n        }\n      }\n    });\n\n    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    protectedAdmins.forEach(admin => {\n      if (!adminEmails.includes(admin.email)) {\n        adminEmails.push(admin.email);\n      }\n    });\n    localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n    \n    const updatedUsers = database.getUsers();\n    \n    const savedAdminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    const defaultAdminEmails = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const finalAdminEmails = savedAdminEmails.length > 0 ? savedAdminEmails : defaultAdminEmails;\n    const filteredUsers = updatedUsers.filter(user => finalAdminEmails.includes(user.email));\n    \n    const usersToShow = showAllUsers ? updatedUsers : filteredUsers;\n    \n    setUsers(usersToShow);\n    setOrders(allOrders);\n    setLastSaveTime(database.getLastSaveTime());\n    setLoading(false);\n  };\n\n  const deleteUser = (userId) => {\n    const userToDelete = users.find(user => user.id === userId);\n    \n    if (!userToDelete) {\n      alert('User not found!');\n      return;\n    }\n\n    const protectedAdmins = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const currentUserEmail = localStorage.getItem('currentUserEmail');\n    \n    if (protectedAdmins.includes(userToDelete.email)) {\n      alert('❌ Cannot delete protected admin accounts!\\n\\nOnly yahiapro400@gmail.com and yahiacool2009@gmail.com can delete protected admins.');\n      return;\n    }\n\n    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    \n    if (adminEmails.includes(userToDelete.email) && !protectedAdmins.includes(currentUserEmail)) {\n      alert('❌ Only protected admins can delete other admin accounts!\\n\\nContact yahiapro400@gmail.com or yahiacool2009@gmail.com to delete admin accounts.');\n      return;\n    }\n\n    if (window.confirm(`Are you sure you want to delete user: ${userToDelete.email}?`)) {\n      const success = database.deleteUser(userId);\n      if (success) {\n        alert(`✅ User ${userToDelete.email} has been deleted successfully!`);\n        loadData();\n      } else {\n        alert('❌ Failed to delete user. Please try again.');\n      }\n    }\n  };\n\n  const rejectOrder = (orderId) => {\n    const orderToReject = orders.find(order => order.id === orderId);\n    if (!orderToReject) return;\n\n    const updatedOrders = orders.map(order =>\n      order.id === orderId ? { ...order, status: 'rejected' } : order\n    );\n    setOrders(updatedOrders);\n    localStorage.setItem('ecommerce_orders', JSON.stringify(updatedOrders));\n    \n    addRejectionNotification(orderToReject);\n    alert(`Order #${orderToReject.orderNumber} has been rejected.`);\n  };\n\n  const approveOrder = (orderId) => {\n    const updatedOrders = orders.map(order =>\n      order.id === orderId ? { ...order, status: 'approved' } : order\n    );\n    setOrders(updatedOrders);\n    localStorage.setItem('ecommerce_orders', JSON.stringify(updatedOrders));\n    alert('Order has been approved.');\n  };\n\n  const deleteOrder = (orderId) => {\n    const orderToDelete = orders.find(order => order.id === orderId);\n    if (!orderToDelete) return;\n\n    if (window.confirm(`Are you sure you want to delete order #${orderToDelete.orderNumber}?`)) {\n      const updatedOrders = orders.filter(order => order.id !== orderId);\n      setOrders(updatedOrders);\n      localStorage.setItem('ecommerce_orders', JSON.stringify(updatedOrders));\n      \n      addDeletionNotification(orderToDelete);\n      restoreProductQuantities(orderToDelete);\n      alert(`Order #${orderToDelete.orderNumber} has been deleted.`);\n    }\n  };\n\n  const addRejectionNotification = (order) => {\n    const notifications = JSON.parse(localStorage.getItem('order_notifications') || '[]');\n    const notification = {\n      id: Date.now(),\n      type: 'rejection',\n      message: `Your order #${order.orderNumber} has been rejected.`,\n      date: new Date().toISOString(),\n      userEmail: order.userEmail,\n      read: false\n    };\n    notifications.push(notification);\n    localStorage.setItem('order_notifications', JSON.stringify(notifications));\n  };\n\n  const addDeletionNotification = (order) => {\n    const notifications = JSON.parse(localStorage.getItem('order_notifications') || '[]');\n    const notification = {\n      id: Date.now(),\n      type: 'deletion',\n      message: `Your order #${order.orderNumber} has been deleted.`,\n      date: new Date().toISOString(),\n      userEmail: order.userEmail,\n      read: false\n    };\n    notifications.push(notification);\n    localStorage.setItem('order_notifications', JSON.stringify(notifications));\n  };\n\n  const restoreProductQuantities = (order) => {\n    try {\n      const existingProducts = JSON.parse(localStorage.getItem('ecommerce_products') || '[]');\n      \n      order.items.forEach(item => {\n        const productIndex = existingProducts.findIndex(p => p.id === item.id);\n        if (productIndex !== -1) {\n          existingProducts[productIndex].quantity += item.quantity;\n        }\n      });\n      \n      localStorage.setItem('ecommerce_products', JSON.stringify(existingProducts));\n      console.log('Product quantities restored after order deletion');\n    } catch (error) {\n      console.error('Error restoring product quantities:', error);\n    }\n  };\n\n  const clearDatabase = () => {\n    if (window.confirm('Are you sure you want to clear all data? This action cannot be undone!')) {\n      database.clearDatabase();\n      setUsers([]);\n      setOrders([]);\n      alert('All data has been cleared.');\n    }\n  };\n\n  const addSpecificAdmin = () => {\n    try {\n      const currentUserEmail = localStorage.getItem('currentUserEmail');\n      if (currentUserEmail) {\n        const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n        if (!adminEmails.includes(currentUserEmail)) {\n          adminEmails.push(currentUserEmail);\n        }\n        localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n\n        const users = database.getUsers();\n        const userExists = users.some(user => user.email === currentUserEmail);\n        if (!userExists) {\n          database.registerUser({\n            email: currentUserEmail,\n            password: 'admin123',\n            name: currentUserEmail.split('@')[0]\n          });\n        }\n        setTimeout(() => {\n          checkAuthorization();\n        }, 500);\n        alert(`تم إضافة ${currentUserEmail} كمدير بنجاح!`);\n      } else {\n        alert('يرجى تسجيل الدخول أولاً');\n      }\n    } catch (error) {\n      alert('Error adding admin: ' + error.message);\n    }\n  };\n\n  const addProtectedAdmins = () => {\n    try {\n      const protectedAdmins = [\n        {\n          email: 'yahiapro400@gmail.com',\n          password: 'yahia2024',\n          name: 'Yahia Pro'\n        },\n        {\n          email: 'yahiacool2009@gmail.com',\n          password: 'yahia2009',\n          name: 'Yahia Cool'\n        }\n      ];\n\n      const users = JSON.parse(localStorage.getItem('ecommerce_users') || '[]');\n      const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n      let addedCount = 0;\n\n      protectedAdmins.forEach(admin => {\n        const existingUser = users.find(user => user.email === admin.email);\n        if (!existingUser) {\n          const newAdminUser = {\n            id: Date.now() + Math.random(),\n            email: admin.email,\n            password: admin.password,\n            name: admin.name,\n            createdAt: new Date().toISOString(),\n            orders: []\n          };\n\n          users.push(newAdminUser);\n          addedCount++;\n\n          if (!adminEmails.includes(admin.email)) {\n            adminEmails.push(admin.email);\n          }\n        } else {\n          if (!adminEmails.includes(admin.email)) {\n            adminEmails.push(admin.email);\n            addedCount++;\n          }\n        }\n      });\n\n      localStorage.setItem('ecommerce_users', JSON.stringify(users));\n      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n\n      if (addedCount > 0) {\n        alert(`✅ Added ${addedCount} protected admin(s) successfully!`);\n      } else {\n        alert('ℹ️ Protected admins already exist.');\n      }\n    } catch (error) {\n      alert('Error adding protected admins: ' + error.message);\n    }\n  };\n\n  const addQuickAdmin = () => {\n    if (!quickAdminEmail || !quickAdminEmail.trim()) {\n      alert('يرجى إدخال إيميل المدير');\n      return;\n    }\n\n    const email = quickAdminEmail.trim();\n    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    const defaultAdminEmails = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const allAdminEmails = adminEmails.length > 0 ? adminEmails : defaultAdminEmails;\n    \n    // Check if email already exists\n    if (allAdminEmails.includes(email)) {\n      alert('هذا الإيميل مدير بالفعل!');\n      return;\n    }\n    \n    // Add to admin list\n    allAdminEmails.push(email);\n    localStorage.setItem('admin_emails', JSON.stringify(allAdminEmails));\n    \n    // Create user if doesn't exist\n    const allUsers = database.getUsers();\n    const userExists = allUsers.some(user => user.email === email);\n    \n    if (!userExists) {\n      try {\n        database.registerUser({\n          email: email,\n          password: 'admin123',\n          name: email.split('@')[0]\n        });\n        console.log(`Created new admin user: ${email}`);\n      } catch (error) {\n        console.log(`User ${email} already exists:`, error.message);\n      }\n    }\n    \n    alert(`تم إضافة ${email} كمدير بنجاح!`);\n    setQuickAdminEmail('');\n    loadData();\n  };\n\n  const fixLoginIssues = () => {\n    if (window.confirm('🔧 Fix login issues?\\n\\nThis will:\\n• Reset protected admin accounts\\n• Ensure correct passwords\\n• Fix any corrupted data\\n\\nContinue?')) {\n      try {\n        const success = database.resetProtectedAdmins();\n        if (success) {\n          alert('✅ Login issues fixed successfully!\\n\\nYou can now login with:\\n• yahiapro400@gmail.com / yahia2024\\n• yahiacool2009@gmail.com / yahia2009');\n          loadData();\n        } else {\n          alert('❌ Failed to fix login issues. Please try again.');\n        }\n      } catch (error) {\n        alert('❌ Error fixing login issues: ' + error.message);\n      }\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const formatShortDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  if (!isAuthorized) {\n    return (\n      <div className={`admin-container ${darkMode ? 'dark-mode' : ''}`}>\n        <div className=\"unauthorized\">\n          <div className=\"unauthorized-content\">\n            <h1>Access Denied</h1>\n            <p>You are not authorized to access the admin dashboard.</p>\n            <p>Only authorized admin accounts can access this page.</p>\n            <div className=\"unauthorized-info\">\n              <h3>Authorized Admin Accounts:</h3>\n              <ul>\n                <li>yahiapro400@gmail.com</li>\n                <li>yahiacool2009@gmail.com</li>\n              </ul>\n            </div>\n            <div className=\"unauthorized-actions\">\n              <button \n                className=\"add-protected-admins-btn\"\n                onClick={() => {\n                  addProtectedAdmins();\n                  setTimeout(() => {\n                    checkAuthorization();\n                  }, 1000);\n                }}\n              >\n                Add Protected Admins\n              </button>\n              <button \n                className=\"fix-login-btn\"\n                onClick={fixLoginIssues}\n              >\n                🔧 Fix Login Issues\n              </button>\n              <button \n                className=\"fix-access-btn\"\n                onClick={() => {\n                  const currentUserEmail = localStorage.getItem('currentUserEmail');\n                  if (currentUserEmail) {\n                    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n                    if (!adminEmails.includes(currentUserEmail)) {\n                      adminEmails.push(currentUserEmail);\n                      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n                    }\n                    const users = database.getUsers();\n                    const userExists = users.some(user => user.email === currentUserEmail);\n                    if (!userExists) {\n                      database.registerUser({\n                        email: currentUserEmail,\n                        password: 'admin123',\n                        name: currentUserEmail.split('@')[0]\n                      });\n                    }\n                    setTimeout(() => {\n                      checkAuthorization();\n                    }, 500);\n                    alert(`تم إضافة ${currentUserEmail} كمدير بنجاح!`);\n                  } else {\n                    alert('يرجى تسجيل الدخول أولاً');\n                  }\n                }}\n              >\n                إصلاح الوصول\n              </button>\n              <button \n                className=\"back-btn\" \n                onClick={() => window.history.back()}\n              >\n                Go Back\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className={`admin-container ${darkMode ? 'dark-mode' : ''}`}>\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n          <p>Loading data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`admin-container ${darkMode ? 'dark-mode' : ''}`}>\n      <div className=\"admin-header\">\n        <h1>Admin Dashboard</h1>\n        <p>Welcome back, Admin! Manage your e-commerce platform.</p>\n        <div className=\"admin-stats\">\n          <div className=\"stat-card\">\n            <span className=\"stat-icon\">👤</span>\n            <h3>{users.length}</h3>\n            <p>Total Users</p>\n          </div>\n          <div className=\"stat-card\">\n            <span className=\"stat-icon\">🛒</span>\n            <h3>{orders.length}</h3>\n            <p>Total Orders</p>\n          </div>\n          <div className=\"stat-card\">\n            <span className=\"stat-icon\">🛡️</span>\n            <h3>{users.filter(u => ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(u.email)).length}</h3>\n            <p>Protected Admins</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"admin-tabs\">\n        <button \n          className={`tab-btn ${activeTab === 'users' ? 'active' : ''}`}\n          onClick={() => setActiveTab('users')}\n        >\n          Users Management\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'orders' ? 'active' : ''}`}\n          onClick={() => setActiveTab('orders')}\n        >\n          Orders Management\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'manage-admins' ? 'active' : ''}`}\n          onClick={() => setActiveTab('manage-admins')}\n        >\n          Manage Admins\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'stats' ? 'active' : ''}`}\n          onClick={() => setActiveTab('stats')}\n        >\n          📊 Advanced Stats\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'analytics' ? 'active' : ''}`}\n          onClick={() => setActiveTab('analytics')}\n        >\n          📈 Analytics\n        </button>\n      </div>\n\n\n\n      <div className=\"admin-content\">\n        {activeTab === 'users' && (\n          <div className=\"users-section\">\n            <div className=\"section-header\">\n              <h2>{showAllUsers ? 'All Users List' : 'Admin Users List'}</h2>\n              <div className=\"header-actions\">\n                <button \n                  className={`toggle-btn ${showAllUsers ? 'active' : ''}`}\n                  onClick={() => setShowAllUsers(!showAllUsers)}\n                >\n                  {showAllUsers ? 'Show Admin Only' : 'Show All Users'}\n                </button>\n                <button className=\"refresh-btn\" onClick={loadData}>\n                  Refresh Data\n                </button>\n              </div>\n            </div>\n            \n            {users.length === 0 ? (\n              <div className=\"no-data\">\n                <p>No admin users found</p>\n              </div>\n            ) : (\n              <div className=\"users-list\">\n                {users.map((user) => {\n                  const isProtected = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(user.email);\n                  return (\n                    <div key={user.id} className={`user-card ${isProtected ? 'protected' : ''}`}>\n                      <div className=\"user-info\">\n                        <h3>\n                          {user.name}\n                          {isProtected && <span className=\"protected-badge\">🛡️ Protected</span>}\n                        </h3>\n                        <p className=\"user-email\">{user.email}</p>\n                        <p className=\"user-date\">Registration Date: {formatDate(user.createdAt)}</p>\n                        <p className=\"user-orders\">Number of Orders: {user.orders?.length || 0}</p>\n                      </div>\n                      <div className=\"user-actions\">\n                        {!isProtected && (\n                          <button \n                            className=\"delete-btn\"\n                            onClick={() => deleteUser(user.id)}\n                          >\n                            Delete\n                          </button>\n                        )}\n                        {isProtected && (\n                          <span className=\"protected-message\">Protected Admin - Cannot Delete</span>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'orders' && (\n          <div className=\"orders-section\">\n            <div className=\"section-header\">\n              <h2>Orders Management</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Refresh Data\n              </button>\n            </div>\n            \n            {orders.length === 0 ? (\n              <div className=\"no-data\">\n                <p>No orders found</p>\n              </div>\n            ) : (\n              <div className=\"orders-list\">\n                {orders.map((order) => (\n                  <div key={order.id} className=\"order-card\">\n                    <div className=\"order-info\">\n                      <h3>Order #{order.orderNumber}</h3>\n                      <p className=\"order-email font-weight-bold\">{order.userEmail}</p>\n                      <p className=\"order-date font-weight-bold\">Order Date: {formatDate(order.date)}</p>\n                      <p className=\"order-status font-weight-bold\">Status: {order.status}</p>\n                      <p className=\"order-total font-weight-bold\">Total: ${order.total.toFixed(2)}</p>\n                      <p className=\"order-items font-weight-bold\">Number of Items: {order.items.length}</p>\n                      {order.shipping && Object.keys(order.shipping).length > 0 && (\n                        <div className=\"shipping-info\">\n                          <h4>Shipping Details:</h4>\n                          <p><strong>Name:</strong> {order.shipping.fullName}</p>\n                          <p><strong>Phone:</strong> {order.shipping.phone}</p>\n                          <p><strong>Address:</strong> {order.shipping.street}, {order.shipping.building}</p>\n                          <p><strong>Address Inside Country:</strong> {order.shipping.addressInCountry}</p>\n                          <p><strong>City:</strong> {order.shipping.city}, {order.shipping.governorate}</p>\n                          {order.shipping.additionalInfo && (\n                            <p><strong>Notes:</strong> {order.shipping.additionalInfo}</p>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"order-items\">\n                      {order.items.map((item, index) => (\n                        <div key={index} className=\"order-item\">\n                          <div className=\"item-image\">\n                            <img src={item.image} alt={item.name} />\n                          </div>\n                          <div className=\"item-details\">\n                            <h4>{item.name}</h4>\n                            <p className=\"item-price\">${item.price}</p>\n                            <p className=\"item-quantity\">Quantity Sold: {item.quantity}</p>\n                            <p className=\"item-total\">Total: ${(item.price * item.quantity).toFixed(2)}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"order-actions\">\n                      {order.status !== 'rejected' && order.status !== 'approved' && (\n                        <button \n                          className=\"reject-btn\"\n                          onClick={() => rejectOrder(order.id)}\n                        >\n                          Reject Order\n                        </button>\n                      )}\n                      {order.status === 'rejected' && (\n                        <div className=\"order-actions\">\n                          <span className=\"rejected-status\">Rejected</span>\n                          <button \n                            className=\"approve-btn\"\n                            onClick={() => approveOrder(order.id)}\n                          >\n                            Re-activate\n                          </button>\n                        </div>\n                      )}\n                      {order.status === 'approved' && (\n                        <span className=\"approved-status\">Approved</span>\n                      )}\n                      <button \n                        className=\"delete-order-btn\"\n                        onClick={() => deleteOrder(order.id)}\n                      >\n                        Delete Order\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'stats' && (\n          <div className=\"stats-section\">\n            <div className=\"section-header\">\n              <h2>📊 Advanced Statistics</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Refresh Stats\n              </button>\n            </div>\n            \n            <div className=\"stats-grid\">\n              <div className=\"stats-card\">\n                <h3>📈 Revenue Analytics</h3>\n                <div className=\"revenue-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Total Revenue</span>\n                    <span className=\"stat-value\">${orders.reduce((total, order) => total + order.total, 0).toFixed(2)}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Average Order Value</span>\n                    <span className=\"stat-value\">${orders.length > 0 ? (orders.reduce((total, order) => total + order.total, 0) / orders.length).toFixed(2) : '0.00'}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Orders This Month</span>\n                    <span className=\"stat-value\">{orders.filter(order => {\n                      const orderDate = new Date(order.date);\n                      const now = new Date();\n                      return orderDate.getMonth() === now.getMonth() && orderDate.getFullYear() === now.getFullYear();\n                    }).length}</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"stats-card\">\n                <h3>👥 User Analytics</h3>\n                <div className=\"user-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Total Users</span>\n                    <span className=\"stat-value\">{users.length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Active Users</span>\n                    <span className=\"stat-value\">{users.filter(user => user.orders && user.orders.length > 0).length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">New Users This Month</span>\n                    <span className=\"stat-value\">{users.filter(user => {\n                      const userDate = new Date(user.createdAt);\n                      const now = new Date();\n                      return userDate.getMonth() === now.getMonth() && userDate.getFullYear() === now.getFullYear();\n                    }).length}</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"stats-card\">\n                <h3>🛒 Order Status</h3>\n                <div className=\"order-status-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Pending Orders</span>\n                    <span className=\"stat-value\">{orders.filter(order => order.status === 'pending').length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Approved Orders</span>\n                    <span className=\"stat-value\">{orders.filter(order => order.status === 'approved').length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Rejected Orders</span>\n                    <span className=\"stat-value\">{orders.filter(order => order.status === 'rejected').length}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'manage-admins' && (\n          <div className=\"manage-admins-section\">\n            <div className=\"section-header\">\n              <h2>👥 Manage Admins</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Refresh Data\n              </button>\n            </div>\n            \n            <div className=\"add-admin-form\">\n              <h3>Add New Admin</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"adminEmail\">Admin Email:</label>\n                <input\n                  type=\"email\"\n                  id=\"adminEmail\"\n                  className=\"admin-input\"\n                  placeholder=\"Enter admin email\"\n                  value={newAdmin.email}\n                  onChange={(e) => setNewAdmin({...newAdmin, email: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"adminPassword\">Password:</label>\n                <input\n                  type=\"password\"\n                  id=\"adminPassword\"\n                  className=\"admin-input\"\n                  placeholder=\"Enter password\"\n                  value={newAdmin.password}\n                  onChange={(e) => setNewAdmin({...newAdmin, password: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"adminName\">Name:</label>\n                <input\n                  type=\"text\"\n                  id=\"adminName\"\n                  className=\"admin-input\"\n                  placeholder=\"Enter admin name\"\n                  value={newAdmin.name}\n                  onChange={(e) => setNewAdmin({...newAdmin, name: e.target.value})}\n                />\n              </div>\n              <button className=\"add-admin-btn\" onClick={() => {\n                if (newAdmin.email && newAdmin.password && newAdmin.name) {\n                  try {\n                    database.registerUser(newAdmin);\n                    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n                    if (!adminEmails.includes(newAdmin.email)) {\n                      adminEmails.push(newAdmin.email);\n                      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n                    }\n                    setNewAdmin({ email: '', password: '', name: '' });\n                    alert('Admin added successfully!');\n                    loadData();\n                  } catch (error) {\n                    alert('Error adding admin: ' + error.message);\n                  }\n                } else {\n                  alert('Please fill all fields');\n                }\n              }}>\n                Add Admin\n              </button>\n              {addAdminError && <div className=\"admin-message error\">{addAdminError}</div>}\n            </div>\n\n            <div className=\"current-admins\">\n              <h3>Current Admins</h3>\n              <div className=\"admins-list\">\n                {(() => {\n                  const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n                  const defaultAdmins = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n                  const allAdmins = adminEmails.length > 0 ? adminEmails : defaultAdmins;\n                  \n                  return allAdmins.map((email, index) => (\n                    <div key={index} className=\"admin-item\">\n                      <span className=\"admin-email\">{email}</span>\n                      <span className=\"admin-status\">Active</span>\n                    </div>\n                  ));\n                })()}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'analytics' && (\n          <div className=\"analytics-section\">\n            <div className=\"section-header\">\n              <h2>📈 Real-time Analytics</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Update Analytics\n              </button>\n            </div>\n            \n            <div className=\"analytics-grid\">\n              <div className=\"analytics-card\">\n                <h3>🔥 Top Performing Products</h3>\n                <div className=\"top-products\">\n                  {(() => {\n                    const productStats = {};\n                    orders.forEach(order => {\n                      order.items.forEach(item => {\n                        if (!productStats[item.name]) {\n                          productStats[item.name] = { quantity: 0, revenue: 0 };\n                        }\n                        productStats[item.name].quantity += item.quantity;\n                        productStats[item.name].revenue += item.price * item.quantity;\n                      });\n                    });\n                    \n                    const topProducts = Object.entries(productStats)\n                      .sort(([,a], [,b]) => b.revenue - a.revenue)\n                      .slice(0, 5);\n                    \n                    return topProducts.map(([name, stats], index) => (\n                      <div key={name} className=\"product-stat\">\n                        <span className=\"rank\">#{index + 1}</span>\n                        <span className=\"name\">{name}</span>\n                        <span className=\"quantity\">Sold: {stats.quantity}</span>\n                        <span className=\"revenue\">${stats.revenue.toFixed(2)}</span>\n                      </div>\n                    ));\n                  })()}\n                </div>\n              </div>\n\n              <div className=\"analytics-card\">\n                <h3>📅 Recent Activity</h3>\n                <div className=\"recent-activity\">\n                  {orders.slice(0, 5).map(order => (\n                    <div key={order.id} className=\"activity-item\">\n                      <span className=\"activity-icon\">🛒</span>\n                      <span className=\"activity-text\">Order #{order.orderNumber} - ${order.total.toFixed(2)}</span>\n                      <span className=\"activity-time\">{formatShortDate(order.date)}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"analytics-card\">\n                <h3>🎯 Quick Actions</h3>\n                <div className=\"quick-actions\">\n                  <button className=\"quick-action-btn\" onClick={() => setActiveTab('users')}>\n                    👥 Manage Users\n                  </button>\n                  <button className=\"quick-action-btn\" onClick={() => setActiveTab('orders')}>\n                    📦 View Orders\n                  </button>\n                  <button className=\"quick-action-btn\" onClick={clearDatabase}>\n                    🗑️ Clear Database\n                  </button>\n                  <button className=\"quick-action-btn\" onClick={addProtectedAdmins}>\n                    🛡️ Add Protected Admins\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n        \n\n      </div>\n    </div>\n  );\n} "],"names":["Admin","_ref","darkMode","users","setUsers","useState","orders","setOrders","activeTab","setActiveTab","loading","setLoading","showAllUsers","setShowAllUsers","lastSaveTime","setLastSaveTime","isAuthorized","setIsAuthorized","showAddAdminForm","setShowAddAdminForm","newAdmin","setNewAdmin","email","password","name","addAdminError","setAddAdminError","quickAdminEmail","setQuickAdminEmail","useEffect","initializeProtectedAdmins","allUsers","database","getUsers","adminEmails","JSON","parse","localStorage","getItem","forEach","admin","find","user","registerUser","console","log","error","message","includes","push","setItem","stringify","setTimeout","checkAuthorization","loadData","savedAdminEmails","length","currentUserEmail","some","addProtectedAdmins","allOrders","getOrders","protectedAdmins","updatedUsers","finalAdminEmails","filteredUsers","filter","getLastSaveTime","addRejectionNotification","order","notifications","notification","id","Date","now","type","orderNumber","date","toISOString","userEmail","read","addDeletionNotification","restoreProductQuantities","existingProducts","items","item","productIndex","findIndex","p","quantity","addedCount","newAdminUser","Math","random","createdAt","alert","fixLoginIssues","window","confirm","resetProtectedAdmins","formatDate","dateString","toLocaleDateString","year","month","day","hour","minute","_jsx","className","children","_jsxs","u","onClick","map","_user$orders","isProtected","userId","userToDelete","deleteUser","status","total","toFixed","shipping","Object","keys","fullName","phone","street","building","addressInCountry","city","governorate","additionalInfo","index","src","image","alt","price","orderId","orderToReject","updatedOrders","rejectOrder","approveOrder","orderToDelete","deleteOrder","reduce","orderDate","getMonth","getFullYear","userDate","htmlFor","placeholder","value","onChange","e","target","productStats","revenue","entries","sort","_ref2","_ref3","a","b","slice","_ref4","stats","clearDatabase","split","history","back"],"sourceRoot":""}