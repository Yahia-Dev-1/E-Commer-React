{"version":3,"file":"static/js/896.110893e7.chunk.js","mappings":"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","sources":["components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useNavigate } from 'react-router-dom';\nimport '../styles/Login.css';\nimport database from '../utils/database';\n\n\nexport default function Login({ onLogin, darkMode = false }) {\n  const [isLogin, setIsLogin] = useState(true);\n  const [formData, setFormData] = useState({\n    email: '',\n    password: '',\n    confirmPassword: ''\n  });\n  const [error, setError] = useState('');\n  const [success, setSuccess] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const navigate = useNavigate();\n\n  const handleInputChange = (e) => {\n    setFormData({\n      ...formData,\n      [e.target.name]: e.target.value\n    });\n    setError('');\n    setSuccess('');\n  };\n\n  const handleSubmit = async (e) => {\n    e.preventDefault();\n    setIsLoading(true);\n    setError('');\n    setSuccess('');\n\n    try {\n      if (!formData.email || !formData.password) {\n        setError('Please fill in all fields');\n        return;\n      }\n\n      if (!isLogin && formData.password !== formData.confirmPassword) {\n        setError('Passwords do not match');\n        return;\n      }\n\n      if (!isLogin && formData.password.length < 6) {\n        setError('Password must be at least 6 characters');\n        return;\n      }\n\n      if (isLogin) {\n        // Login\n        const user = database.validateLogin(formData.email, formData.password);\n        if (user) {\n          setSuccess('Login successful!');\n          // Save current user email to localStorage for admin access\n          localStorage.setItem('currentUserEmail', user.email);\n          setTimeout(() => {\n            onLogin(user);\n            navigate('/');\n          }, 1000);\n        } else {\n          setError('Invalid email or password');\n        }\n      } else {\n        // Register new user\n        try {\n          const newUser = database.registerUser({\n            email: formData.email,\n            password: formData.password,\n            name: formData.email.split('@')[0]\n          });\n          \n          setSuccess('Account created successfully!');\n          // Save current user email to localStorage for admin access\n          localStorage.setItem('currentUserEmail', newUser.email);\n          setTimeout(() => {\n            onLogin(newUser);\n            navigate('/');\n          }, 1000);\n        } catch (error) {\n          setError(error.message);\n        }\n      }\n    } catch (error) {\n      setError('An unexpected error occurred');\n      console.error('Login error:', error);\n    } finally {\n      setIsLoading(false);\n    }\n  };\n\n  const handleToggleMode = () => {\n    setIsLogin(!isLogin);\n    setError('');\n    setSuccess('');\n    setFormData({ email: '', password: '', confirmPassword: '' });\n  };\n\n  return (\n    <div className={`login-container ${darkMode ? 'dark-mode' : ''}`}>\n      <div className=\"login-card\">\n        <div className=\"login-header\">\n          <h2>{isLogin ? 'Welcome Back' : 'Create Account'}</h2>\n          <p>{isLogin ? 'Sign in to your account' : 'Join us today'}</p>\n        </div>\n\n        <form onSubmit={handleSubmit} className=\"login-form\">\n          <div className=\"form-group\">\n            <label htmlFor=\"email\">Email</label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              name=\"email\"\n              value={formData.email}\n              onChange={handleInputChange}\n              placeholder=\"Enter your email\"\n              required\n              disabled={isLoading}\n            />\n          </div>\n\n          <div className=\"form-group\">\n            <label htmlFor=\"password\">Password</label>\n            <input\n              type=\"password\"\n              id=\"password\"\n              name=\"password\"\n              value={formData.password}\n              onChange={handleInputChange}\n              placeholder=\"Enter your password\"\n              required\n              disabled={isLoading}\n            />\n          </div>\n\n          {!isLogin && (\n            <div className=\"form-group\">\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\n              <input\n                type=\"password\"\n                id=\"confirmPassword\"\n                name=\"confirmPassword\"\n                value={formData.confirmPassword}\n                onChange={handleInputChange}\n                placeholder=\"Confirm your password\"\n                required\n                disabled={isLoading}\n              />\n            </div>\n          )}\n\n          {error && <div className=\"error-message\">{error}</div>}\n          {success && <div className=\"success-message\">{success}</div>}\n\n          <button \n            type=\"submit\" \n            className=\"submit-btn\"\n            disabled={isLoading}\n          >\n            {isLoading ? 'Loading...' : (isLogin ? 'Sign In' : 'Create Account')}\n          </button>\n        </form>\n\n        <div className=\"login-footer\">\n          <p>\n            {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\n            <button\n              className=\"toggle-btn\"\n              onClick={handleToggleMode}\n              disabled={isLoading}\n            >\n              {isLogin ? 'Create Account' : 'Sign In'}\n            </button>\n          </p>\n        </div>\n\n        {/* Display database info for development */}\n        <div className=\"debug-info\" style={{ marginTop: '20px', fontSize: '12px', color: '#666' }}>\n          <p>Registered Users: {database.getUsers().length}</p>\n          <p>Saved Orders: {database.getOrders().length}</p>\n        </div>\n      </div>\n      \n      \n    </div>\n  );\n} "],"names":["Login","_ref","onLogin","darkMode","isLogin","setIsLogin","useState","formData","setFormData","email","password","confirmPassword","error","setError","success","setSuccess","isLoading","setIsLoading","navigate","useNavigate","handleInputChange","e","_objectSpread","target","name","value","_jsx","className","concat","children","_jsxs","onSubmit","async","preventDefault","length","user","database","validateLogin","localStorage","setItem","setTimeout","newUser","registerUser","split","message","console","htmlFor","type","id","onChange","placeholder","required","disabled","onClick","handleToggleMode","style","marginTop","fontSize","color","getUsers","getOrders"],"sourceRoot":""}