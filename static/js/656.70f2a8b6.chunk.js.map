{"version":3,"file":"static/js/656.70f2a8b6.chunk.js","mappings":"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","sources":["components/CategoryManagement.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\nimport '../styles/CategoryManagement.css';\n\nexport default function CategoryManagement({ darkMode = true }) {\n  const [categories, setCategories] = useState([]);\n  const [newCategory, setNewCategory] = useState('');\n  const [editingCategory, setEditingCategory] = useState(null);\n  const [editName, setEditName] = useState('');\n\n  useEffect(() => {\n    loadCategories();\n  }, []);\n\n  const loadCategories = () => {\n    try {\n      const savedCategories = JSON.parse(localStorage.getItem('ecommerce_categories') || '[]');\n      if (savedCategories.length === 0) {\n        // Default categories if none exist\n        const defaultCategories = [\n          'Electronics',\n          'Clothing',\n          'Books',\n          'Home & Garden',\n          'Sports',\n          'Beauty',\n          'Toys',\n          'Other'\n        ];\n        setCategories(defaultCategories);\n        localStorage.setItem('ecommerce_categories', JSON.stringify(defaultCategories));\n      } else {\n        setCategories(savedCategories);\n      }\n    } catch (error) {\n      console.error('Error loading categories:', error);\n      setCategories([]);\n    }\n  };\n\n  const addCategory = () => {\n    if (!newCategory.trim()) {\n      alert('Please enter a category name');\n      return;\n    }\n\n    if (categories.includes(newCategory.trim())) {\n      alert('Category already exists');\n      return;\n    }\n\n    const updatedCategories = [...categories, newCategory.trim()];\n    setCategories(updatedCategories);\n    localStorage.setItem('ecommerce_categories', JSON.stringify(updatedCategories));\n    setNewCategory('');\n    alert('Category added successfully!');\n  };\n\n  const deleteCategory = (categoryName) => {\n    if (window.confirm(`Are you sure you want to delete \"${categoryName}\"?`)) {\n      const updatedCategories = categories.filter(cat => cat !== categoryName);\n      setCategories(updatedCategories);\n      localStorage.setItem('ecommerce_categories', JSON.stringify(updatedCategories));\n      alert('Category deleted successfully!');\n    }\n  };\n\n  const startEdit = (categoryName) => {\n    setEditingCategory(categoryName);\n    setEditName(categoryName);\n  };\n\n  const saveEdit = () => {\n    if (!editName.trim()) {\n      alert('Please enter a category name');\n      return;\n    }\n\n    if (categories.includes(editName.trim()) && editName.trim() !== editingCategory) {\n      alert('Category already exists');\n      return;\n    }\n\n    const updatedCategories = categories.map(cat => \n      cat === editingCategory ? editName.trim() : cat\n    );\n    setCategories(updatedCategories);\n    localStorage.setItem('ecommerce_categories', JSON.stringify(updatedCategories));\n    setEditingCategory(null);\n    setEditName('');\n    alert('Category updated successfully!');\n  };\n\n  const cancelEdit = () => {\n    setEditingCategory(null);\n    setEditName('');\n  };\n\n  const getCategoryStats = () => {\n    try {\n      const products = JSON.parse(localStorage.getItem('ecommerce_products') || '[]');\n      const stats = {};\n      categories.forEach(category => {\n        stats[category] = products.filter(product => product.category === category).length;\n      });\n      return stats;\n    } catch (error) {\n      console.error('Error getting category stats:', error);\n      return {};\n    }\n  };\n\n  const categoryStats = getCategoryStats();\n\n  return (\n    <div className={`category-management-container ${darkMode ? 'dark-mode' : ''}`}>\n      <div className=\"category-header\">\n        <div className=\"header-content\">\n          <div className=\"header-text\">\n            <h1>Category Management</h1>\n            <p>Manage your product categories</p>\n          </div>\n          <button \n            className=\"back-btn\"\n            onClick={() => window.location.href = '/add-products'}\n            style={{\n              background: 'linear-gradient(135deg, #28a745 0%, #20c997 100%)',\n              marginLeft: '10px'\n            }}\n          >\n            ðŸ”™ Back to Add Products\n          </button>\n        </div>\n      </div>\n\n      <div className=\"category-form\">\n        <h2>Add New Category</h2>\n        <div className=\"form-group\">\n          <label htmlFor=\"newCategory\">Category Name:</label>\n          <input\n            type=\"text\"\n            id=\"newCategory\"\n            value={newCategory}\n            onChange={(e) => setNewCategory(e.target.value)}\n            placeholder=\"Enter category name\"\n            onKeyPress={(e) => e.key === 'Enter' && addCategory()}\n          />\n          <button onClick={addCategory} className=\"add-btn\">\n            Add Category\n          </button>\n        </div>\n      </div>\n\n      <div className=\"categories-list\">\n        <h2>Current Categories ({categories.length})</h2>\n        {categories.length === 0 ? (\n          <p className=\"no-categories\">No categories found.</p>\n        ) : (\n          <div className=\"categories-grid\">\n            {categories.map((category, index) => (\n              <div key={index} className=\"category-card\">\n                <div className=\"category-info\">\n                  {editingCategory === category ? (\n                    <div className=\"edit-form\">\n                      <input\n                        type=\"text\"\n                        value={editName}\n                        onChange={(e) => setEditName(e.target.value)}\n                        onKeyPress={(e) => e.key === 'Enter' && saveEdit()}\n                      />\n                      <div className=\"edit-actions\">\n                        <button onClick={saveEdit} className=\"save-btn\">\n                          Save\n                        </button>\n                        <button onClick={cancelEdit} className=\"cancel-btn\">\n                          Cancel\n                        </button>\n                      </div>\n                    </div>\n                  ) : (\n                    <>\n                      <h3>{category}</h3>\n                      <p className=\"category-count\">\n                        Products: {categoryStats[category] || 0}\n                      </p>\n                    </>\n                  )}\n                </div>\n                <div className=\"category-actions\">\n                  {editingCategory !== category && (\n                    <>\n                      <button \n                        className=\"edit-btn\"\n                        onClick={() => startEdit(category)}\n                      >\n                        Edit\n                      </button>\n                      <button \n                        className=\"delete-btn\"\n                        onClick={() => deleteCategory(category)}\n                      >\n                        Delete\n                      </button>\n                    </>\n                  )}\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n\n      <div className=\"category-stats\">\n        <h2>Category Statistics</h2>\n        <div className=\"stats-grid\">\n          <div className=\"stat-card\">\n            <h3>Total Categories</h3>\n            <p>{categories.length}</p>\n          </div>\n          <div className=\"stat-card\">\n            <h3>Total Products</h3>\n            <p>{Object.values(categoryStats).reduce((sum, count) => sum + count, 0)}</p>\n          </div>\n          <div className=\"stat-card\">\n            <h3>Most Popular Category</h3>\n            <p>\n              {(() => {\n                const entries = Object.entries(categoryStats);\n                if (entries.length === 0) return 'None';\n                const maxEntry = entries.reduce((max, current) => \n                  current[1] > max[1] ? current : max\n                );\n                return maxEntry[1] > 0 ? maxEntry[0] : 'None';\n              })()}\n            </p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n} "],"names":["CategoryManagement","_ref","darkMode","categories","setCategories","useState","newCategory","setNewCategory","editingCategory","setEditingCategory","editName","setEditName","useEffect","loadCategories","savedCategories","JSON","parse","localStorage","getItem","length","defaultCategories","setItem","stringify","error","console","addCategory","trim","alert","includes","updatedCategories","saveEdit","map","cat","cancelEdit","categoryStats","getCategoryStats","products","stats","forEach","category","filter","product","_jsxs","className","concat","children","_jsx","onClick","window","location","href","style","background","marginLeft","htmlFor","type","id","value","onChange","e","target","placeholder","onKeyPress","key","index","_Fragment","startEdit","categoryName","confirm","deleteCategory","Object","values","reduce","sum","count","entries","maxEntry","max","current"],"sourceRoot":""}