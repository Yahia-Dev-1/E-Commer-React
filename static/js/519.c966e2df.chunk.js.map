{"version":3,"file":"static/js/519.c966e2df.chunk.js","mappings":"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","sources":["components/UsersList.js","components/UsersSummary.js","components/Admin.js"],"sourcesContent":["import React, { useState } from 'react';\n\nexport default function UsersList({ users, onEditUser, onDeleteUser, adminEmails }) {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [filter, setFilter] = useState('all');\n\n  // Filter users based on search term and filter type\n  const filteredUsers = users.filter(user => {\n    const matchesSearch = \n      user.name?.toLowerCase().includes(searchTerm.toLowerCase()) ||\n      user.email?.toLowerCase().includes(searchTerm.toLowerCase());\n      \n    if (filter === 'all') return matchesSearch;\n    if (filter === 'admin') return matchesSearch && adminEmails.includes(user.email);\n    if (filter === 'regular') return matchesSearch && !adminEmails.includes(user.email);\n    return matchesSearch;\n  });\n\n  const formatDate = (date) => {\n    if (!date) return 'N/A';\n    return new Date(date).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric'\n    });\n  };\n\n  return (\n    <div className=\"users-list-container\">\n      <div className=\"users-list-header\">\n        <h2 className=\"users-list-title\">Users Management</h2>\n        <div className=\"users-list-controls\">\n          <input\n            type=\"text\"\n            placeholder=\"Search users...\"\n            className=\"users-search\"\n            value={searchTerm}\n            onChange={(e) => setSearchTerm(e.target.value)}\n          />\n          <select \n            className=\"users-filter\"\n            value={filter}\n            onChange={(e) => setFilter(e.target.value)}\n          >\n            <option value=\"all\">All Users</option>\n            <option value=\"admin\">Admins Only</option>\n            <option value=\"regular\">Regular Users</option>\n          </select>\n        </div>\n      </div>\n\n      <div className=\"table-responsive\">\n        <table className=\"users-table\">\n          <thead>\n            <tr>\n              <th>Name</th>\n              <th>Email</th>\n              <th>Status</th>\n              <th>Joined Date</th>\n              <th>Actions</th>\n            </tr>\n          </thead>\n          <tbody>\n            {filteredUsers.map(user => (\n              <tr key={user.email}>\n                <td>{user.name || 'N/A'}</td>\n                <td>{user.email}</td>\n                <td>\n                  <span className={`user-status ${adminEmails.includes(user.email) ? 'admin' : 'regular'}`}>\n                    {adminEmails.includes(user.email) ? 'Admin' : 'User'}\n                  </span>\n                </td>\n                <td>{formatDate(user.joinDate)}</td>\n                <td>\n                  <div className=\"user-actions\">\n                    <button \n                      className=\"user-action-btn edit\"\n                      onClick={() => onEditUser(user)}\n                    >\n                      Edit\n                    </button>\n                    {!adminEmails.includes(user.email) && (\n                      <button \n                        className=\"user-action-btn delete\"\n                        onClick={() => onDeleteUser(user)}\n                      >\n                        Delete\n                      </button>\n                    )}\n                  </div>\n                </td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>\n    </div>\n  );\n}\n","import React from 'react';\nimport './UsersSummary.css';\n\nexport default function UsersSummary({ users, adminEmails }) {\n  const totalUsers = users.length;\n  const totalAdmins = users.filter(user => adminEmails.includes(user.email)).length;\n  const totalRegularUsers = totalUsers - totalAdmins;\n\n  return (\n    <div className=\"users-summary-container\">\n      <h3 className=\"summary-title\">User Statistics</h3>\n      <div className=\"summary-grid\">\n        <div className=\"summary-card total\">\n          <div className=\"card-content\">\n            <span className=\"card-value\">{totalUsers}</span>\n            <span className=\"card-label\">Total Users</span>\n          </div>\n          <div className=\"card-icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <path d=\"M17 21v-2a4 4 0 0 0-4-4H5a4 4 0 0 0-4 4v2\"></path>\n              <circle cx=\"9\" cy=\"7\" r=\"4\"></circle>\n              <path d=\"M23 21v-2a4 4 0 0 0-3-3.87\"></path>\n              <path d=\"M16 3.13a4 4 0 0 1 0 7.75\"></path>\n            </svg>\n          </div>\n        </div>\n        \n        <div className=\"summary-card admins\">\n          <div className=\"card-content\">\n            <span className=\"card-value\">{totalAdmins}</span>\n            <span className=\"card-label\">Admins</span>\n          </div>\n          <div className=\"card-icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <path d=\"M20 7h-8v12h8V7zM4 7h8v12H4z\"></path>\n              <rect x=\"4\" y=\"7\" width=\"16\" height=\"12\"></rect>\n              <circle cx=\"12\" cy=\"11\" r=\"1\"></circle>\n              <path d=\"M12 12v3\"></path>\n            </svg>\n          </div>\n        </div>\n\n        <div className=\"summary-card users\">\n          <div className=\"card-content\">\n            <span className=\"card-value\">{totalRegularUsers}</span>\n            <span className=\"card-label\">Regular Users</span>\n          </div>\n          <div className=\"card-icon\">\n            <svg xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n              <path d=\"M20 21v-2a4 4 0 0 0-4-4H8a4 4 0 0 0-4 4v2\"></path>\n              <circle cx=\"12\" cy=\"7\" r=\"4\"></circle>\n            </svg>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n}\n","import React, { useState, useEffect, useCallback } from 'react';\nimport '../styles/Admin.css';\nimport '../styles/AdminResponsive.css';\nimport '../styles/UsersList.css';\nimport database from '../utils/database';\nimport UsersList from './UsersList';\nimport UsersSummary from './UsersSummary';\n\nexport default function Admin({ darkMode = true }) {\n  const [users, setUsers] = useState([]);\n  const [orders, setOrders] = useState([]);\n  const [activeTab, setActiveTab] = useState('users');\n  const [loading, setLoading] = useState(true);\n  const [showAllUsers, setShowAllUsers] = useState(true); // Changed to true to show all users by default\n  const [lastSaveTime, setLastSaveTime] = useState(null);\n  const [isAuthorized, setIsAuthorized] = useState(false);\n  const [showAddAdminForm, setShowAddAdminForm] = useState(false);\n  const [newAdmin, setNewAdmin] = useState({\n    email: '',\n    password: '',\n    name: ''\n  });\n  const [addAdminError, setAddAdminError] = useState('');\n  const [quickAdminEmail, setQuickAdminEmail] = useState('');\n\n  const checkAuthorization = useCallback(() => {\n    const savedAdminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    const defaultAdminEmails = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const adminEmails = savedAdminEmails.length > 0 ? savedAdminEmails : defaultAdminEmails;\n    \n    const currentUserEmail = localStorage.getItem('currentUserEmail');\n    \n    if (currentUserEmail && adminEmails.includes(currentUserEmail)) {\n      const allUsers = database.getUsers();\n      const userExists = allUsers.some(user => user.email === currentUserEmail);\n      \n      if (userExists) {\n        setIsAuthorized(true);\n        console.log('Authorization granted');\n      } else {\n        addProtectedAdmins();\n        setTimeout(() => {\n          setIsAuthorized(true);\n          console.log('Authorization granted after adding user');\n        }, 500);\n      }\n    } else {\n      console.log('User not in admin list, authorization denied');\n      setIsAuthorized(false);\n    }\n  }, []);\n\n  const loadData = useCallback(() => {\n    setLoading(true);\n    const allUsers = database.getUsers();\n    const allOrders = database.getOrders();\n    \n    const protectedAdmins = [\n      {\n        email: 'yahiapro400@gmail.com',\n        password: 'yahia2024',\n        name: 'Yahia Pro'\n      },\n      {\n        email: 'yahiacool2009@gmail.com',\n        password: 'yahia2009',\n        name: 'Yahia Cool'\n      }\n    ];\n\n    protectedAdmins.forEach(admin => {\n      const existingUser = allUsers.find(user => user.email === admin.email);\n      if (!existingUser) {\n        try {\n          database.registerUser({\n            email: admin.email,\n            password: admin.password,\n            name: admin.name\n          });\n          console.log(`Added protected admin: ${admin.email}`);\n        } catch (error) {\n          console.log(`Protected admin ${admin.email} already exists or error occurred:`, error.message);\n        }\n      }\n    });\n\n    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    protectedAdmins.forEach(admin => {\n      if (!adminEmails.includes(admin.email)) {\n        adminEmails.push(admin.email);\n      }\n    });\n    localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n    \n    const updatedUsers = database.getUsers();\n    \n    const savedAdminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    const defaultAdminEmails = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const finalAdminEmails = savedAdminEmails.length > 0 ? savedAdminEmails : defaultAdminEmails;\n    const filteredUsers = updatedUsers.filter(user => finalAdminEmails.includes(user.email));\n    \n    const usersToShow = showAllUsers ? updatedUsers : filteredUsers;\n    \n    setUsers(usersToShow);\n    setOrders(allOrders);\n    setLastSaveTime(database.getLastSaveTime());\n    setLoading(false);\n  }, [showAllUsers]);\n\n  useEffect(() => {\n    const initializeProtectedAdmins = () => {\n      const protectedAdmins = [\n        {\n          email: 'yahiapro400@gmail.com',\n          password: 'yahia2024',\n          name: 'Yahia Pro'\n        },\n        {\n          email: 'yahiacool2009@gmail.com',\n          password: 'yahia2009',\n          name: 'Yahia Cool'\n        }\n      ];\n\n      const allUsers = database.getUsers();\n      const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n\n      protectedAdmins.forEach(admin => {\n        const existingUser = allUsers.find(user => user.email === admin.email);\n        if (!existingUser) {\n          try {\n            database.registerUser({\n              email: admin.email,\n              password: admin.password,\n              name: admin.name\n            });\n            console.log(`Initialized protected admin: ${admin.email}`);\n          } catch (error) {\n            console.log(`Protected admin ${admin.email} already exists:`, error.message);\n          }\n        }\n\n        if (!adminEmails.includes(admin.email)) {\n          adminEmails.push(admin.email);\n        }\n      });\n\n      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n    };\n\n    initializeProtectedAdmins();\n    \n    setTimeout(() => {\n      checkAuthorization();\n    }, 100);\n    \n    loadData();\n  }, [checkAuthorization, loadData]);\n\n  useEffect(() => {\n    if (isAuthorized) {\n      loadData();\n    }\n  }, [showAllUsers, isAuthorized, loadData]);\n\n  const deleteUser = (userId) => {\n    const userToDelete = users.find(user => user.id === userId);\n    \n    if (!userToDelete) {\n      alert('User not found!');\n      return;\n    }\n\n    const protectedAdmins = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const currentUserEmail = localStorage.getItem('currentUserEmail');\n    \n    if (protectedAdmins.includes(userToDelete.email)) {\n      alert('❌ Cannot delete protected admin accounts!\\n\\nOnly yahiapro400@gmail.com and yahiacool2009@gmail.com can delete protected admins.');\n      return;\n    }\n\n    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n    \n    if (adminEmails.includes(userToDelete.email) && !protectedAdmins.includes(currentUserEmail)) {\n      alert('❌ Only protected admins can delete other admin accounts!\\n\\nContact yahiapro400@gmail.com or yahiacool2009@gmail.com to delete admin accounts.');\n      return;\n    }\n\n    if (window.confirm(`Are you sure you want to delete user: ${userToDelete.email}?`)) {\n      const success = database.deleteUser(userId);\n      if (success) {\n        alert(`✅ User ${userToDelete.email} has been deleted successfully!`);\n        loadData();\n      } else {\n        alert('❌ Failed to delete user. Please try again.');\n      }\n    }\n  };\n\n  const handleEditUser = (user) => {\n    // التحقق من صلاحيات التعديل\n    const protectedAdmins = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n    const currentUserEmail = localStorage.getItem('currentUserEmail');\n    \n    if (protectedAdmins.includes(user.email) && !protectedAdmins.includes(currentUserEmail)) {\n      alert('❌ Only protected admins can edit admin accounts!\\n\\nContact yahiapro400@gmail.com or yahiacool2009@gmail.com for changes.');\n      return;\n    }\n\n    // هنا يمكنك إضافة منطق تعديل المستخدم\n    // مثل فتح نافذة منبثقة للتعديل\n  };\n\n  const handleDeleteUser = (user) => {\n    const userId = user.id || users.find(u => u.email === user.email)?.id;\n    if (userId) {\n      deleteUser(userId);\n    } else {\n      alert('Could not find user ID');\n    }\n  };\n\n  const rejectOrder = (orderId) => {\n    const orderToReject = orders.find(order => order.id === orderId);\n    if (!orderToReject) return;\n\n    const updatedOrders = orders.map(order =>\n      order.id === orderId ? { ...order, status: 'rejected' } : order\n    );\n    setOrders(updatedOrders);\n    localStorage.setItem('ecommerce_orders', JSON.stringify(updatedOrders));\n    \n    addRejectionNotification(orderToReject);\n    alert(`Order #${orderToReject.orderNumber} has been rejected.`);\n  };\n\n  const approveOrder = (orderId) => {\n    const updatedOrders = orders.map(order =>\n      order.id === orderId ? { ...order, status: 'approved' } : order\n    );\n    setOrders(updatedOrders);\n    localStorage.setItem('ecommerce_orders', JSON.stringify(updatedOrders));\n    alert('Order has been approved.');\n  };\n\n  const deleteOrder = (orderId) => {\n    const orderToDelete = orders.find(order => order.id === orderId);\n    if (!orderToDelete) return;\n\n    if (window.confirm(`Are you sure you want to delete order #${orderToDelete.orderNumber}?`)) {\n      const updatedOrders = orders.filter(order => order.id !== orderId);\n      setOrders(updatedOrders);\n      localStorage.setItem('ecommerce_orders', JSON.stringify(updatedOrders));\n      \n      addDeletionNotification(orderToDelete);\n      restoreProductQuantities(orderToDelete);\n      alert(`Order #${orderToDelete.orderNumber} has been deleted.`);\n    }\n  };\n\n  const addRejectionNotification = (order) => {\n    const notifications = JSON.parse(localStorage.getItem('order_notifications') || '[]');\n    const notification = {\n      id: Date.now(),\n      type: 'rejection',\n      message: `Your order #${order.orderNumber} has been rejected.`,\n      date: new Date().toISOString(),\n      userEmail: order.userEmail,\n      read: false\n    };\n    notifications.push(notification);\n    localStorage.setItem('order_notifications', JSON.stringify(notifications));\n  };\n\n  const addDeletionNotification = (order) => {\n    const notifications = JSON.parse(localStorage.getItem('order_notifications') || '[]');\n    const notification = {\n      id: Date.now(),\n      type: 'deletion',\n      message: `Your order #${order.orderNumber} has been deleted.`,\n      date: new Date().toISOString(),\n      userEmail: order.userEmail,\n      read: false\n    };\n    notifications.push(notification);\n    localStorage.setItem('order_notifications', JSON.stringify(notifications));\n  };\n\n  const restoreProductQuantities = (order) => {\n    try {\n      const existingProducts = JSON.parse(localStorage.getItem('ecommerce_products') || '[]');\n      \n      order.items.forEach(item => {\n        const productIndex = existingProducts.findIndex(p => p.id === item.id);\n        if (productIndex !== -1) {\n          existingProducts[productIndex].quantity += item.quantity;\n        }\n      });\n      \n      localStorage.setItem('ecommerce_products', JSON.stringify(existingProducts));\n      console.log('Product quantities restored after order deletion');\n    } catch (error) {\n      console.error('Error restoring product quantities:', error);\n    }\n  };\n\n  const clearDatabase = () => {\n    if (window.confirm('Are you sure you want to clear all data? This action cannot be undone!')) {\n      database.clearDatabase();\n      setUsers([]);\n      setOrders([]);\n      alert('All data has been cleared.');\n    }\n  };\n\n  const addProtectedAdmins = () => {\n    try {\n      const protectedAdmins = [\n        {\n          email: 'yahiapro400@gmail.com',\n          password: 'yahia2024',\n          name: 'Yahia Pro'\n        },\n        {\n          email: 'yahiacool2009@gmail.com',\n          password: 'yahia2009',\n          name: 'Yahia Cool'\n        }\n      ];\n\n      const users = JSON.parse(localStorage.getItem('ecommerce_users') || '[]');\n      const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n      let addedCount = 0;\n\n      protectedAdmins.forEach(admin => {\n        const existingUser = users.find(user => user.email === admin.email);\n        if (!existingUser) {\n          const newAdminUser = {\n            id: Date.now() + Math.random(),\n            email: admin.email,\n            password: admin.password,\n            name: admin.name,\n            createdAt: new Date().toISOString(),\n            orders: []\n          };\n\n          users.push(newAdminUser);\n          addedCount++;\n\n          if (!adminEmails.includes(admin.email)) {\n            adminEmails.push(admin.email);\n          }\n        } else {\n          if (!adminEmails.includes(admin.email)) {\n            adminEmails.push(admin.email);\n            addedCount++;\n          }\n        }\n      });\n\n      localStorage.setItem('ecommerce_users', JSON.stringify(users));\n      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n\n      if (addedCount > 0) {\n        alert(`✅ Added ${addedCount} protected admin(s) successfully!`);\n      } else {\n        alert('ℹ️ Protected admins already exist.');\n      }\n    } catch (error) {\n      alert('Error adding protected admins: ' + error.message);\n    }\n  };\n\n  const fixLoginIssues = () => {\n    if (window.confirm('🔧 Fix login issues?\\n\\nThis will:\\n• Reset protected admin accounts\\n• Ensure correct passwords\\n• Fix any corrupted data\\n\\nContinue?')) {\n      try {\n        const success = database.resetProtectedAdmins();\n        if (success) {\n          alert('✅ Login issues fixed successfully!\\n\\nYou can now login with:\\n• yahiapro400@gmail.com / yahia2024\\n• yahiacool2009@gmail.com / yahia2009');\n          loadData();\n        } else {\n          alert('❌ Failed to fix login issues. Please try again.');\n        }\n      } catch (error) {\n        alert('❌ Error fixing login issues: ' + error.message);\n      }\n    }\n  };\n\n  const formatDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      year: 'numeric',\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  const formatShortDate = (dateString) => {\n    return new Date(dateString).toLocaleDateString('en-US', {\n      month: 'short',\n      day: 'numeric',\n      hour: '2-digit',\n      minute: '2-digit'\n    });\n  };\n\n  if (!isAuthorized) {\n    return (\n      <div className={`admin-container ${darkMode ? 'dark-mode' : ''}`}>\n        <div className=\"unauthorized\">\n          <div className=\"unauthorized-content\">\n            <h1>Access Denied</h1>\n            <p>You are not authorized to access the admin dashboard.</p>\n            <p>Only authorized admin accounts can access this page.</p>\n            <div className=\"unauthorized-info\">\n              <h3>Authorized Admin Accounts:</h3>\n              <ul>\n                <li>yahiapro400@gmail.com</li>\n                <li>yahiacool2009@gmail.com</li>\n              </ul>\n            </div>\n            <div className=\"unauthorized-actions\">\n              <button \n                className=\"add-protected-admins-btn\"\n                onClick={() => {\n                  addProtectedAdmins();\n                  setTimeout(() => {\n                    checkAuthorization();\n                  }, 1000);\n                }}\n              >\n                Add Protected Admins\n              </button>\n              <button \n                className=\"fix-login-btn\"\n                onClick={fixLoginIssues}\n              >\n                🔧 Fix Login Issues\n              </button>\n              <button \n                className=\"fix-access-btn\"\n                onClick={() => {\n                  const currentUserEmail = localStorage.getItem('currentUserEmail');\n                  if (currentUserEmail) {\n                    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n                    if (!adminEmails.includes(currentUserEmail)) {\n                      adminEmails.push(currentUserEmail);\n                      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n                    }\n                    const users = database.getUsers();\n                    const userExists = users.some(user => user.email === currentUserEmail);\n                    if (!userExists) {\n                      database.registerUser({\n                        email: currentUserEmail,\n                        password: 'admin123',\n                        name: currentUserEmail.split('@')[0]\n                      });\n                    }\n                    setTimeout(() => {\n                      checkAuthorization();\n                    }, 500);\n                    alert(`تم إضافة ${currentUserEmail} كمدير بنجاح!`);\n                  } else {\n                    alert('يرجى تسجيل الدخول أولاً');\n                  }\n                }}\n              >\n                إصلاح الوصول\n              </button>\n              <button \n                className=\"back-btn\" \n                onClick={() => window.history.back()}\n              >\n                Go Back\n              </button>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n\n  if (loading) {\n    return (\n      <div className={`admin-container ${darkMode ? 'dark-mode' : ''}`}>\n        <div className=\"loading\">\n          <div className=\"spinner\"></div>\n          <p>Loading data...</p>\n        </div>\n      </div>\n    );\n  }\n\n  return (\n    <div className={`admin-container ${darkMode ? 'dark-mode' : ''}`}>\n      <div className=\"admin-header\">\n        <h1>Admin Dashboard</h1>\n        <p>Welcome back, Admin! Manage your e-commerce platform.</p>\n        <div className=\"admin-stats\">\n          <div className=\"stat-card\">\n            <span className=\"stat-icon\">👤</span>\n            <h3>{users.length}</h3>\n            <p>Total Users</p>\n          </div>\n          <div className=\"stat-card\">\n            <span className=\"stat-icon\">🛒</span>\n            <h3>{orders.length}</h3>\n            <p>Total Orders</p>\n          </div>\n          <div className=\"stat-card\">\n            <span className=\"stat-icon\">🛡️</span>\n            <h3>{users.filter(u => ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(u.email)).length}</h3>\n            <p>Protected Admins</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"admin-tabs\">\n        <button \n          className={`tab-btn ${activeTab === 'users' ? 'active' : ''}`}\n          onClick={() => setActiveTab('users')}\n        >\n          Users Management\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'orders' ? 'active' : ''}`}\n          onClick={() => setActiveTab('orders')}\n        >\n          Orders Management\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'manage-admins' ? 'active' : ''}`}\n          onClick={() => setActiveTab('manage-admins')}\n        >\n          Manage Admins\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'stats' ? 'active' : ''}`}\n          onClick={() => setActiveTab('stats')}\n        >\n          📊 Advanced Stats\n        </button>\n        <button \n          className={`tab-btn ${activeTab === 'analytics' ? 'active' : ''}`}\n          onClick={() => setActiveTab('analytics')}\n        >\n          📈 Analytics\n        </button>\n\n      </div>\n\n      <div className=\"admin-content\">\n        {activeTab === 'users' && (\n          <div className=\"users-section\">\n            <UsersSummary \n              users={users}\n              adminEmails={JSON.parse(localStorage.getItem('admin_emails') || '[]')}\n            />\n            <UsersList \n              users={users}\n              onEditUser={handleEditUser}\n              onDeleteUser={handleDeleteUser}\n              adminEmails={JSON.parse(localStorage.getItem('admin_emails') || '[]')}\n            />\n            \n            {users.length === 0 ? (\n              <div className=\"no-data\">\n                <p>No users found</p>\n              </div>\n            ) : (\n              <div className=\"users-list\">\n                <div className=\"users-summary\">\n                  <h3>📊 Users Summary</h3>\n                  <p>Total Users: <strong>{users.length}</strong></p>\n                  <p>Protected Admins: <strong>{users.filter(u => ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(u.email)).length}</strong></p>\n                  <p>Regular Users: <strong>{users.filter(u => !['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(u.email)).length}</strong></p>\n                </div>\n                \n                {users.map((user, index) => {\n                  const isProtected = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'].includes(user.email);\n                  const isAdmin = JSON.parse(localStorage.getItem('admin_emails') || '[]').includes(user.email);\n                  return (\n                    <div key={user.id} className={`user-card ${isProtected ? 'protected' : ''} ${isAdmin ? 'admin' : 'regular'}`}>\n                      <div className=\"user-info\">\n                        <div className=\"user-header\">\n                          <h3>\n                            #{index + 1} - {user.name}\n                            {isProtected && <span className=\"protected-badge\">🛡️ Protected Admin</span>}\n                            {isAdmin && !isProtected && <span className=\"admin-badge\">👑 Admin</span>}\n                            {!isAdmin && <span className=\"user-badge\">👤 User</span>}\n                          </h3>\n                        </div>\n                        <p className=\"user-email\"><strong>Email:</strong> {user.email}</p>\n                        <p className=\"user-date\"><strong>Registration Date:</strong> {formatDate(user.createdAt)}</p>\n                        <p className=\"user-orders\"><strong>Number of Orders:</strong> {user.orders?.length || 0}</p>\n                        <p className=\"user-id\"><strong>User ID:</strong> {user.id}</p>\n                        {user.password && (\n                          <p className=\"user-password\"><strong>Password:</strong> {user.password}</p>\n                        )}\n                      </div>\n                      <div className=\"user-actions\">\n                        {!isProtected && (\n                          <button \n                            className=\"delete-btn\"\n                            onClick={() => deleteUser(user.id)}\n                          >\n                            Delete\n                          </button>\n                        )}\n                        {isProtected && (\n                          <span className=\"protected-message\">Protected Admin - Cannot Delete</span>\n                        )}\n                      </div>\n                    </div>\n                  );\n                })}\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'orders' && (\n          <div className=\"orders-section\">\n            <div className=\"section-header\">\n              <h2>Orders Management</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Refresh Data\n              </button>\n            </div>\n            \n            {orders.length === 0 ? (\n              <div className=\"no-data\">\n                <p>No orders found</p>\n              </div>\n            ) : (\n              <div className=\"orders-list\">\n                {orders.map((order) => (\n                  <div key={order.id} className=\"order-card\">\n                    <div className=\"order-info\">\n                      <h3>Order #{order.orderNumber}</h3>\n                      <p className=\"order-email font-weight-bold\">{order.userEmail}</p>\n                      <p className=\"order-date font-weight-bold\">Order Date: {formatDate(order.date)}</p>\n                      <p className=\"order-status font-weight-bold\">Status: {order.status}</p>\n                      <p className=\"order-total font-weight-bold\">Total: ${order.total.toFixed(2)}</p>\n                      <p className=\"order-items font-weight-bold\">Number of Items: {order.items.length}</p>\n                      {order.shipping && Object.keys(order.shipping).length > 0 && (\n                        <div className=\"shipping-info\">\n                          <h4>Shipping Details:</h4>\n                          <p><strong>Name:</strong> {order.shipping.fullName}</p>\n                          <p><strong>Phone:</strong> {order.shipping.phone}</p>\n                          <p><strong>Address:</strong> {order.shipping.street}, {order.shipping.building}</p>\n                          <p><strong>Address Inside Country:</strong> {order.shipping.addressInCountry}</p>\n                          <p><strong>City:</strong> {order.shipping.city}, {order.shipping.governorate}</p>\n                          {order.shipping.additionalInfo && (\n                            <p><strong>Notes:</strong> {order.shipping.additionalInfo}</p>\n                          )}\n                        </div>\n                      )}\n                    </div>\n                    <div className=\"order-items\">\n                      {order.items.map((item, index) => (\n                        <div key={index} className=\"order-item\">\n                          <div className=\"item-image\">\n                            <img src={item.image} alt={item.name} />\n                          </div>\n                          <div className=\"item-details\">\n                            <h4>{item.name}</h4>\n                            <p className=\"item-price\">${item.price}</p>\n                            <p className=\"item-quantity\">Quantity Sold: {item.quantity}</p>\n                            <p className=\"item-total\">Total: ${(item.price * item.quantity).toFixed(2)}</p>\n                          </div>\n                        </div>\n                      ))}\n                    </div>\n                    <div className=\"order-actions\">\n                      {order.status !== 'rejected' && order.status !== 'approved' && (\n                        <button \n                          className=\"reject-btn\"\n                          onClick={() => rejectOrder(order.id)}\n                        >\n                          Reject Order\n                        </button>\n                      )}\n                      {order.status === 'rejected' && (\n                        <div className=\"order-actions\">\n                          <span className=\"rejected-status\">Rejected</span>\n                          <button \n                            className=\"approve-btn\"\n                            onClick={() => approveOrder(order.id)}\n                          >\n                            Re-activate\n                          </button>\n                        </div>\n                      )}\n                      {order.status === 'approved' && (\n                        <span className=\"approved-status\">Approved</span>\n                      )}\n                      <button \n                        className=\"delete-order-btn\"\n                        onClick={() => deleteOrder(order.id)}\n                      >\n                        Delete Order\n                      </button>\n                    </div>\n                  </div>\n                ))}\n              </div>\n            )}\n          </div>\n        )}\n\n        {activeTab === 'stats' && (\n          <div className=\"stats-section\">\n            <div className=\"section-header\">\n              <h2>📊 Advanced Statistics</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Refresh Stats\n              </button>\n            </div>\n            \n            <div className=\"stats-grid\">\n              <div className=\"stats-card\">\n                <h3>📈 Revenue Analytics</h3>\n                <div className=\"revenue-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Total Revenue</span>\n                    <span className=\"stat-value\">${orders.reduce((total, order) => total + order.total, 0).toFixed(2)}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Average Order Value</span>\n                    <span className=\"stat-value\">${orders.length > 0 ? (orders.reduce((total, order) => total + order.total, 0) / orders.length).toFixed(2) : '0.00'}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Orders This Month</span>\n                    <span className=\"stat-value\">{orders.filter(order => {\n                      const orderDate = new Date(order.date);\n                      const now = new Date();\n                      return orderDate.getMonth() === now.getMonth() && orderDate.getFullYear() === now.getFullYear();\n                    }).length}</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"stats-card\">\n                <h3>👥 User Analytics</h3>\n                <div className=\"user-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Total Users</span>\n                    <span className=\"stat-value\">{users.length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Active Users</span>\n                    <span className=\"stat-value\">{users.filter(user => user.orders && user.orders.length > 0).length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">New Users This Month</span>\n                    <span className=\"stat-value\">{users.filter(user => {\n                      const userDate = new Date(user.createdAt);\n                      const now = new Date();\n                      return userDate.getMonth() === now.getMonth() && userDate.getFullYear() === now.getFullYear();\n                    }).length}</span>\n                  </div>\n                </div>\n              </div>\n\n              <div className=\"stats-card\">\n                <h3>🛒 Order Status</h3>\n                <div className=\"order-status-stats\">\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Pending Orders</span>\n                    <span className=\"stat-value\">{orders.filter(order => order.status === 'pending').length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Approved Orders</span>\n                    <span className=\"stat-value\">{orders.filter(order => order.status === 'approved').length}</span>\n                  </div>\n                  <div className=\"stat-item\">\n                    <span className=\"stat-label\">Rejected Orders</span>\n                    <span className=\"stat-value\">{orders.filter(order => order.status === 'rejected').length}</span>\n                  </div>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'manage-admins' && (\n          <div className=\"manage-admins-section\">\n            <div className=\"section-header\">\n              <h2>👥 Manage Admins</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Refresh Data\n              </button>\n            </div>\n            \n            <div className=\"add-admin-form\">\n              <h3>Add New Admin</h3>\n              <div className=\"form-group\">\n                <label htmlFor=\"adminEmail\">Admin Email:</label>\n                <input\n                  type=\"email\"\n                  id=\"adminEmail\"\n                  className=\"admin-input\"\n                  placeholder=\"Enter admin email\"\n                  value={newAdmin.email}\n                  onChange={(e) => setNewAdmin({...newAdmin, email: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"adminPassword\">Password:</label>\n                <input\n                  type=\"password\"\n                  id=\"adminPassword\"\n                  className=\"admin-input\"\n                  placeholder=\"Enter password\"\n                  value={newAdmin.password}\n                  onChange={(e) => setNewAdmin({...newAdmin, password: e.target.value})}\n                />\n              </div>\n              <div className=\"form-group\">\n                <label htmlFor=\"adminName\">Name:</label>\n                <input\n                  type=\"text\"\n                  id=\"adminName\"\n                  className=\"admin-input\"\n                  placeholder=\"Enter admin name\"\n                  value={newAdmin.name}\n                  onChange={(e) => setNewAdmin({...newAdmin, name: e.target.value})}\n                />\n              </div>\n              <button className=\"add-admin-btn\" onClick={() => {\n                if (newAdmin.email && newAdmin.password && newAdmin.name) {\n                  try {\n                    database.registerUser(newAdmin);\n                    const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n                    if (!adminEmails.includes(newAdmin.email)) {\n                      adminEmails.push(newAdmin.email);\n                      localStorage.setItem('admin_emails', JSON.stringify(adminEmails));\n                    }\n                    setNewAdmin({ email: '', password: '', name: '' });\n                    alert('Admin added successfully!');\n                    loadData();\n                  } catch (error) {\n                    alert('Error adding admin: ' + error.message);\n                  }\n                } else {\n                  alert('Please fill all fields');\n                }\n              }}>\n                Add Admin\n              </button>\n              {addAdminError && <div className=\"admin-message error\">{addAdminError}</div>}\n            </div>\n\n            <div className=\"current-admins\">\n              <h3>Current Admins</h3>\n              <div className=\"admins-list\">\n                {(() => {\n                  const adminEmails = JSON.parse(localStorage.getItem('admin_emails') || '[]');\n                  const defaultAdmins = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com'];\n                  const allAdmins = adminEmails.length > 0 ? adminEmails : defaultAdmins;\n                  \n                  return allAdmins.map((email, index) => (\n                    <div key={index} className=\"admin-item\">\n                      <span className=\"admin-email\">{email}</span>\n                      <span className=\"admin-status\">Active</span>\n                    </div>\n                  ));\n                })()}\n              </div>\n            </div>\n          </div>\n        )}\n\n        {activeTab === 'analytics' && (\n          <div className=\"analytics-section\">\n            <div className=\"section-header\">\n              <h2>📈 Real-time Analytics</h2>\n              <button className=\"refresh-btn\" onClick={loadData}>\n                Update Analytics\n              </button>\n            </div>\n            \n            <div className=\"analytics-grid\">\n              <div className=\"analytics-card\">\n                <h3>🔥 Top Performing Products</h3>\n                <div className=\"top-products\">\n                  {(() => {\n                    const productStats = {};\n                    orders.forEach(order => {\n                      order.items.forEach(item => {\n                        if (!productStats[item.name]) {\n                          productStats[item.name] = { quantity: 0, revenue: 0 };\n                        }\n                        productStats[item.name].quantity += item.quantity;\n                        productStats[item.name].revenue += item.price * item.quantity;\n                      });\n                    });\n                    \n                    const topProducts = Object.entries(productStats)\n                      .sort(([,a], [,b]) => b.revenue - a.revenue)\n                      .slice(0, 5);\n                    \n                    return topProducts.map(([name, stats], index) => (\n                      <div key={name} className=\"product-stat\">\n                        <span className=\"rank\">#{index + 1}</span>\n                        <span className=\"name\">{name}</span>\n                        <span className=\"quantity\">Sold: {stats.quantity}</span>\n                        <span className=\"revenue\">${stats.revenue.toFixed(2)}</span>\n                      </div>\n                    ));\n                  })()}\n                </div>\n              </div>\n\n              <div className=\"analytics-card\">\n                <h3>📅 Recent Activity</h3>\n                <div className=\"recent-activity\">\n                  {orders.slice(0, 5).map(order => (\n                    <div key={order.id} className=\"activity-item\">\n                      <span className=\"activity-icon\">🛒</span>\n                      <span className=\"activity-text\">Order #{order.orderNumber} - ${order.total.toFixed(2)}</span>\n                      <span className=\"activity-time\">{formatShortDate(order.date)}</span>\n                    </div>\n                  ))}\n                </div>\n              </div>\n\n              <div className=\"analytics-card\">\n                <h3>🎯 Quick Actions</h3>\n                <div className=\"quick-actions\">\n                  <button className=\"quick-action-btn\" onClick={() => setActiveTab('users')}>\n                    👥 Manage Users\n                  </button>\n                  <button className=\"quick-action-btn\" onClick={() => setActiveTab('orders')}>\n                    📦 View Orders\n                  </button>\n                  <button className=\"quick-action-btn\" onClick={clearDatabase}>\n                    🗑️ Clear Database\n                  </button>\n                  <button className=\"quick-action-btn\" onClick={addProtectedAdmins}>\n                    🛡️ Add Protected Admins\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        )}\n\n\n      </div>\n    </div>\n  );\n} "],"names":["UsersList","_ref","users","onEditUser","onDeleteUser","adminEmails","searchTerm","setSearchTerm","useState","filter","setFilter","filteredUsers","user","_user$name","_user$email","matchesSearch","name","toLowerCase","includes","email","_jsxs","className","children","_jsx","type","placeholder","value","onChange","e","target","map","concat","date","joinDate","Date","toLocaleDateString","year","month","day","onClick","UsersSummary","totalUsers","length","totalAdmins","totalRegularUsers","xmlns","viewBox","fill","stroke","strokeWidth","d","cx","cy","r","x","y","width","height","Admin","darkMode","setUsers","orders","setOrders","activeTab","setActiveTab","loading","setLoading","showAllUsers","setShowAllUsers","lastSaveTime","setLastSaveTime","isAuthorized","setIsAuthorized","showAddAdminForm","setShowAddAdminForm","newAdmin","setNewAdmin","password","addAdminError","setAddAdminError","quickAdminEmail","setQuickAdminEmail","checkAuthorization","useCallback","savedAdminEmails","JSON","parse","localStorage","getItem","currentUserEmail","database","getUsers","some","console","log","addProtectedAdmins","setTimeout","loadData","allUsers","allOrders","getOrders","protectedAdmins","forEach","admin","find","registerUser","error","message","push","setItem","stringify","updatedUsers","finalAdminEmails","getLastSaveTime","useEffect","initializeProtectedAdmins","deleteUser","userId","userToDelete","id","alert","window","confirm","addRejectionNotification","order","notifications","notification","now","orderNumber","toISOString","userEmail","read","addDeletionNotification","restoreProductQuantities","existingProducts","items","item","productIndex","findIndex","p","quantity","addedCount","newAdminUser","Math","random","createdAt","fixLoginIssues","resetProtectedAdmins","formatDate","dateString","hour","minute","u","_users$find","index","_user$orders","isProtected","isAdmin","status","total","toFixed","shipping","Object","keys","fullName","phone","street","building","addressInCountry","city","governorate","additionalInfo","src","image","alt","price","orderId","orderToReject","updatedOrders","_objectSpread","rejectOrder","approveOrder","orderToDelete","deleteOrder","reduce","orderDate","getMonth","getFullYear","userDate","htmlFor","productStats","revenue","entries","sort","_ref2","_ref3","a","b","slice","_ref4","stats","clearDatabase","split","history","back"],"sourceRoot":""}