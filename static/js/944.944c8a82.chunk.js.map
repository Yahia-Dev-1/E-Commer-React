{"version":3,"file":"static/js/944.944c8a82.chunk.js","mappings":"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","sources":["components/Login.js"],"sourcesContent":["import React, { useState } from 'react';\r\nimport { useNavigate } from 'react-router-dom';\r\nimport '../styles/Login.css';\r\nimport database from '../utils/database';\r\n\r\n\r\nexport default function Login({ onLogin, darkMode = false }) {\r\n  const [isLogin, setIsLogin] = useState(true);\r\n  const [formData, setFormData] = useState({\r\n    email: '',\r\n    password: '',\r\n    confirmPassword: ''\r\n  });\r\n  const [error, setError] = useState('');\r\n  const [success, setSuccess] = useState('');\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const navigate = useNavigate();\r\n\r\n  const handleInputChange = (e) => {\r\n    setFormData({\r\n      ...formData,\r\n      [e.target.name]: e.target.value\r\n    });\r\n    setError('');\r\n    setSuccess('');\r\n  };\r\n\r\n  const handleSubmit = async (e) => {\r\n    e.preventDefault();\r\n    setIsLoading(true);\r\n    setError('');\r\n    setSuccess('');\r\n\r\n    try {\r\n      if (!formData.email || !formData.password) {\r\n        setError('Please fill in all fields');\r\n        return;\r\n      }\r\n\r\n      if (!isLogin && formData.password !== formData.confirmPassword) {\r\n        setError('Passwords do not match');\r\n        return;\r\n      }\r\n\r\n      if (!isLogin && formData.password.length < 6) {\r\n        setError('Password must be at least 6 characters');\r\n        return;\r\n      }\r\n\r\n      if (isLogin) {\r\n        // Login\r\n        const user = database.validateLogin(formData.email, formData.password);\r\n        if (user) {\r\n          setSuccess('Login successful!');\r\n          // Save current user email to localStorage for admin access\r\n          localStorage.setItem('currentUserEmail', user.email);\r\n          setTimeout(() => {\r\n            onLogin(user);\r\n            navigate('/');\r\n          }, 1000);\r\n        } else {\r\n          setError('Invalid email or password');\r\n        }\r\n      } else {\r\n        // Register new user\r\n        try {\r\n          const newUser = database.registerUser({\r\n            email: formData.email,\r\n            password: formData.password,\r\n            name: formData.email.split('@')[0]\r\n          });\r\n          \r\n          setSuccess('Account created successfully!');\r\n          // Save current user email to localStorage for admin access\r\n          localStorage.setItem('currentUserEmail', newUser.email);\r\n          setTimeout(() => {\r\n            onLogin(newUser);\r\n            navigate('/');\r\n          }, 1000);\r\n        } catch (error) {\r\n          setError(error.message);\r\n        }\r\n      }\r\n    } catch (error) {\r\n      setError('An unexpected error occurred');\r\n      console.error('Login error:', error);\r\n    } finally {\r\n      setIsLoading(false);\r\n    }\r\n  };\r\n\r\n  const handleToggleMode = () => {\r\n    setIsLogin(!isLogin);\r\n    setError('');\r\n    setSuccess('');\r\n    setFormData({ email: '', password: '', confirmPassword: '' });\r\n  };\r\n\r\n  return (\r\n    <div className={`login-container ${darkMode ? 'dark-mode' : ''}`}>\r\n      <div className=\"login-card\">\r\n        <div className=\"login-header\">\r\n          <h2>{isLogin ? 'Welcome Back' : 'Create Account'}</h2>\r\n          <p>{isLogin ? 'Sign in to your account' : 'Join us today'}</p>\r\n        </div>\r\n\r\n        <form onSubmit={handleSubmit} className=\"login-form\">\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"email\">Email</label>\r\n            <input\r\n              type=\"email\"\r\n              id=\"email\"\r\n              name=\"email\"\r\n              value={formData.email}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter your email\"\r\n              required\r\n              disabled={isLoading}\r\n            />\r\n          </div>\r\n\r\n          <div className=\"form-group\">\r\n            <label htmlFor=\"password\">Password</label>\r\n            <input\r\n              type=\"password\"\r\n              id=\"password\"\r\n              name=\"password\"\r\n              value={formData.password}\r\n              onChange={handleInputChange}\r\n              placeholder=\"Enter your password\"\r\n              required\r\n              disabled={isLoading}\r\n            />\r\n          </div>\r\n\r\n          {!isLogin && (\r\n            <div className=\"form-group\">\r\n              <label htmlFor=\"confirmPassword\">Confirm Password</label>\r\n              <input\r\n                type=\"password\"\r\n                id=\"confirmPassword\"\r\n                name=\"confirmPassword\"\r\n                value={formData.confirmPassword}\r\n                onChange={handleInputChange}\r\n                placeholder=\"Confirm your password\"\r\n                required\r\n                disabled={isLoading}\r\n              />\r\n            </div>\r\n          )}\r\n\r\n          {error && <div className=\"error-message\">{error}</div>}\r\n          {success && <div className=\"success-message\">{success}</div>}\r\n\r\n          <button \r\n            type=\"submit\" \r\n            className=\"submit-btn\"\r\n            disabled={isLoading}\r\n          >\r\n            {isLoading ? 'Loading...' : (isLogin ? 'Sign In' : 'Create Account')}\r\n          </button>\r\n        </form>\r\n\r\n        <div className=\"login-footer\">\r\n          <p>\r\n            {isLogin ? \"Don't have an account? \" : \"Already have an account? \"}\r\n            <button\r\n              className=\"toggle-btn\"\r\n              onClick={handleToggleMode}\r\n              disabled={isLoading}\r\n            >\r\n              {isLogin ? 'Create Account' : 'Sign In'}\r\n            </button>\r\n          </p>\r\n        </div>\r\n\r\n        {/* Display database info for development */}\r\n        <div className=\"debug-info\" style={{ marginTop: '20px', fontSize: '12px', color: '#666' }}>\r\n          <p>Registered Users: {database.getUsers().length}</p>\r\n          <p>Saved Orders: {database.getOrders().length}</p>\r\n        </div>\r\n      </div>\r\n      \r\n      \r\n    </div>\r\n  );\r\n} "],"names":["Login","_ref","onLogin","darkMode","isLogin","setIsLogin","useState","formData","setFormData","email","password","confirmPassword","error","setError","success","setSuccess","isLoading","setIsLoading","navigate","useNavigate","handleInputChange","e","target","name","value","_jsx","className","children","_jsxs","onSubmit","async","preventDefault","length","user","database","validateLogin","localStorage","setItem","setTimeout","newUser","registerUser","split","message","console","htmlFor","type","id","onChange","placeholder","required","disabled","onClick","handleToggleMode","style","marginTop","fontSize","color","getUsers","getOrders"],"sourceRoot":""}