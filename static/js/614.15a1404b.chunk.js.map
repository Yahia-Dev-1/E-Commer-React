{"version":3,"file":"static/js/614.15a1404b.chunk.js","mappings":"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","sources":["components/AddProducts.js"],"sourcesContent":["import React, { useState, useEffect } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport '../styles/AddProducts.css'\n\nexport default function AddProducts({ darkMode = false }) {\n  const navigate = useNavigate()\n  const [user, setUser] = useState(null)\n  const [isLoading, setIsLoading] = useState(true)\n  const [message, setMessage] = useState('')\n  const [showForm, setShowForm] = useState(false)\n  const [showStats, setShowStats] = useState(false)\n  const [showCategoriesSection, setShowCategoriesSection] = useState(false)\n  const [showCategoryForm, setShowCategoryForm] = useState(false)\n  const [showCategoryDropdown, setShowCategoryDropdown] = useState(false)\n  const [products, setProducts] = useState([])\n  const [categories, setCategories] = useState(['electronics', 'clothing', 'books', 'home', 'sports', 'other'])\n  const [newCategory, setNewCategory] = useState('')\n  const [newProduct, setNewProduct] = useState({\n    title: '',\n    price: '',\n    quantity: 1,\n    image: '',\n    description: '',\n    category: 'electronics'\n  })\n  const [editingProduct, setEditingProduct] = useState(null)\n\n  // Protected admin emails\n  const protectedAdmins = [\n    'yahiapro400@gmail.com',\n    'yahiacool2009@gmail.com'\n  ]\n\n  const isProtectedAdmin = () => {\n    const currentUserEmail = localStorage.getItem('currentUserEmail') || \n                            localStorage.getItem('loggedInUser') || \n                            localStorage.getItem('userEmail')\n    return currentUserEmail && protectedAdmins.includes(currentUserEmail)\n  }\n\n  const canModifyProtectedAdmin = () => {\n    const currentUserEmail = localStorage.getItem('currentUserEmail') || \n                            localStorage.getItem('loggedInUser') || \n                            localStorage.getItem('userEmail')\n    return currentUserEmail && protectedAdmins.includes(currentUserEmail)\n  }\n\n  useEffect(() => {\n    // Preload images for faster loading\n    const preloadImages = () => {\n      products.forEach(product => {\n        if (product.image) {\n          const img = new Image();\n          img.src = product.image;\n        }\n      });\n    };\n\n    // Check if user is logged in - try multiple possible keys\n    const currentUserEmail = localStorage.getItem('currentUserEmail') || \n                            localStorage.getItem('loggedInUser') || \n                            localStorage.getItem('userEmail')\n    \n    // If no user email found, check if there are any users in localStorage\n    if (!currentUserEmail) {\n      const users = JSON.parse(localStorage.getItem('users') || '[]')\n      if (users.length === 0) {\n        // If no users exist, allow access (first time setup)\n        setUser({ email: 'admin@gmail.com' })\n        loadProducts()\n        loadCategories()\n        setIsLoading(false)\n        return\n      }\n      // If users exist but no current user, redirect to login\n      navigate('/login')\n      return\n    }\n\n    // Get user data\n    const users = JSON.parse(localStorage.getItem('users') || '[]')\n    const currentUser = users.find(u => u.email === currentUserEmail)\n    \n    if (!currentUser) {\n      // If user not found in users array, check if it's an admin email\n      const adminEmails = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com', 'admin-test@gmail.com', 'admin@gmail.com']\n      if (adminEmails.includes(currentUserEmail)) {\n        setUser({ email: currentUserEmail })\n        loadProducts()\n        loadCategories()\n        setIsLoading(false)\n        return\n      }\n      navigate('/login')\n      return\n    }\n\n    // Check if user is admin\n    const adminEmails = ['yahiapro400@gmail.com', 'yahiacool2009@gmail.com', 'admin-test@gmail.com', 'admin@gmail.com']\n    if (!adminEmails.includes(currentUser.email)) {\n      navigate('/')\n      return\n    }\n\n    setUser(currentUser)\n\n    loadProducts()\n    loadCategories()\n    \n    // Preload images after products are loaded\n    setTimeout(() => {\n      preloadImages();\n    }, 100);\n    \n    // Auto-cleanup on page load to prevent memory issues\n    try {\n      const products = JSON.parse(localStorage.getItem('ecommerce_products') || '[]')\n      if (products.length > 50) {\n        const limitedProducts = products.slice(-50)\n        localStorage.setItem('ecommerce_products', JSON.stringify(limitedProducts))\n        console.log('🧹 Auto-cleanup: Reduced products from', products.length, 'to', limitedProducts.length)\n      }\n    } catch (error) {\n      console.error('Error during auto-cleanup:', error)\n    }\n\n    setIsLoading(false)\n\n    // Event listener for storage changes\n    const handleStorageChange = (e) => {\n      if (e.key === 'ecommerce_products') {\n        // Debounce the update to prevent excessive re-renders\n        clearTimeout(window.storageTimeout)\n        window.storageTimeout = setTimeout(() => {\n          loadProducts()\n        }, 500)\n      }\n    }\n\n    window.addEventListener('storage', handleStorageChange)\n\n    // Click outside listener for category dropdown\n    const handleClickOutside = (event) => {\n      if (!event.target.closest('.category-selector')) {\n        setShowCategoryDropdown(false)\n      }\n    }\n\n    document.addEventListener('mousedown', handleClickOutside)\n\n    return () => {\n      window.removeEventListener('storage', handleStorageChange)\n      document.removeEventListener('mousedown', handleClickOutside)\n      clearTimeout(window.storageTimeout)\n    }\n  }, [navigate])\n\n  const loadProducts = () => {\n    try {\n      const storedProducts = localStorage.getItem('ecommerce_products')\n      if (storedProducts) {\n        const parsedProducts = JSON.parse(storedProducts)\n        setProducts(parsedProducts)\n      }\n    } catch (error) {\n      console.error('Error loading products:', error)\n      setProducts([])\n    }\n  }\n\n  const loadCategories = () => {\n    try {\n      const storedCategories = localStorage.getItem('ecommerce_categories')\n      if (storedCategories) {\n        const parsedCategories = JSON.parse(storedCategories)\n        setCategories(parsedCategories)\n      }\n    } catch (error) {\n      console.error('Error loading categories:', error)\n    }\n  }\n\n  const handleInputChange = (e) => {\n    const { name, value } = e.target\n    setNewProduct(prev => ({\n      ...prev,\n      [name]: value\n    }))\n  }\n\n  const handleEditInputChange = (e) => {\n    const { name, value } = e.target\n    setEditingProduct(prev => ({\n      ...prev,\n      [name]: value\n    }))\n  }\n\n  const handleSubmit = (e) => {\n    e.preventDefault()\n    \n    if (!newProduct.title || !newProduct.price || !newProduct.image || !newProduct.quantity) {\n      setMessage('Please fill in all required fields')\n      return\n    }\n\n    const product = {\n      id: Date.now(),\n      title: newProduct.title,\n      price: parseFloat(newProduct.price),\n      quantity: parseInt(newProduct.quantity),\n      image: newProduct.image,\n      description: newProduct.description,\n      category: newProduct.category,\n      createdAt: new Date().toISOString(),\n      createdBy: `${localStorage.getItem('currentUserEmail') || localStorage.getItem('loggedInUser') || localStorage.getItem('userEmail') || 'Admin'} (Admin)`,\n      isProtected: isProtectedAdmin()\n    }\n\n    // إضافة المنتج الجديد إلى المنتجات الموجودة\n    const updatedProducts = [...products, product]\n    setProducts(updatedProducts)\n    \n    // تحسين التخزين مع ضغط البيانات\n    try {\n      // تحسين البيانات قبل التخزين\n      const optimizedProducts = updatedProducts.map(product => ({\n        id: product.id,\n        title: product.title,\n        price: product.price,\n        quantity: product.quantity,\n        image: product.image,\n        description: product.description,\n        category: product.category,\n        createdAt: product.createdAt\n      }))\n      \n      // Limit products before saving to prevent memory issues\n      const limitedProducts = optimizedProducts.slice(-50) // Keep only last 50 products\n      const compressedData = JSON.stringify(limitedProducts)\n      localStorage.setItem('ecommerce_products', compressedData)\n      \n      // التحقق من نجاح التخزين\n      const storedData = localStorage.getItem('ecommerce_products')\n      if (!storedData) {\n        throw new Error('Failed to store products')\n      }\n      \n      console.log(`✅ Successfully stored ${limitedProducts.length} products in localStorage`)\n    } catch (error) {\n      console.error('Error storing products:', error)\n      setMessage('⚠️ Warning: Product added but storage may be limited. Consider clearing some data.')\n      setTimeout(() => setMessage(''), 5000)\n    }\n    \n    // إرسال حدث مخصص لتحديث المنتجات في الصفحة الرئيسية\n    window.dispatchEvent(new Event('productsUpdated'))\n    \n    setMessage(`✅ Product \"${product.title}\" with ${product.quantity} pieces added successfully!`)\n    \n    // Clear form and redirect to products page\n    clearForm()\n    setTimeout(() => {\n      setMessage('')\n      // Redirect to products page\n      window.location.href = '/'\n    }, 2000)\n  }\n\n  const handleEditSubmit = (e) => {\n    e.preventDefault()\n    \n    if (!editingProduct.title || !editingProduct.price || !editingProduct.image || !editingProduct.quantity) {\n      setMessage('Please fill in all required fields')\n      return\n    }\n\n    // Check if trying to edit a protected product\n    if (editingProduct.isProtected && !canModifyProtectedAdmin()) {\n      alert('❌ Cannot edit protected products!\\n\\nOnly yahiapro400@gmail.com and yahiacool2009@gmail.com can edit protected products.')\n      return\n    }\n\n    const updatedProduct = {\n      ...editingProduct,\n      price: parseFloat(editingProduct.price),\n      quantity: parseInt(editingProduct.quantity),\n      updatedAt: new Date().toISOString(),\n      updatedBy: `${localStorage.getItem('currentUserEmail') || localStorage.getItem('loggedInUser') || localStorage.getItem('userEmail') || 'Admin'} (Admin)`\n    }\n\n    const updatedProducts = products.map(product => \n      product.id === editingProduct.id ? updatedProduct : product\n    )\n    \n    setProducts(updatedProducts)\n    \n    // تحسين التخزين مع ضغط البيانات\n    try {\n      // Limit products before saving to prevent memory issues\n      const limitedProducts = updatedProducts.slice(-50) // Keep only last 50 products\n      const compressedData = JSON.stringify(limitedProducts)\n      localStorage.setItem('ecommerce_products', compressedData)\n      \n      // التحقق من نجاح التخزين\n      const storedData = localStorage.getItem('ecommerce_products')\n      if (!storedData) {\n        throw new Error('Failed to store products')\n      }\n      \n      console.log(`✅ Successfully updated product. ${limitedProducts.length} products in localStorage`)\n    } catch (error) {\n      console.error('Error updating product:', error)\n      setMessage('⚠️ Warning: Product updated but storage may be limited.')\n      setTimeout(() => setMessage(''), 5000)\n    }\n    \n    // إرسال حدث مخصص لتحديث المنتجات في الصفحة الرئيسية\n    window.dispatchEvent(new Event('productsUpdated'))\n    \n    setMessage(`✅ Product \"${updatedProduct.title}\" updated successfully!`)\n    setEditingProduct(null)\n    setShowForm(false)\n    \n    setTimeout(() => setMessage(''), 3000)\n  }\n\n  // Function to clear form manually\n  const clearForm = () => {\n    setNewProduct({\n      title: '',\n      price: '',\n      quantity: 1,\n      image: '',\n      description: '',\n      category: 'electronics'\n    })\n    setMessage('Form cleared successfully!')\n    setTimeout(() => setMessage(''), 3000)\n  }\n\n  // Function to add new category\n  // دالة لحذف كاتجري\n  const handleDeleteCategory = (categoryToDelete) => {\n    if (window.confirm(`Are you sure you want to delete the category \"${categoryToDelete}\"? This will also remove it from all products.`)) {\n      try {\n        // حذف الكاتجري من قائمة الكاتجري\n        const updatedCategories = categories.filter(cat => cat !== categoryToDelete)\n        setCategories(updatedCategories)\n        localStorage.setItem('ecommerce_categories', JSON.stringify(updatedCategories))\n        \n        // تحديث المنتجات التي تستخدم هذه الكاتجري\n        const updatedProducts = products.map(product => {\n          if (product.category === categoryToDelete) {\n            return {\n              ...product,\n              category: 'Other' // تعيين كاتجري افتراضية\n            }\n          }\n          return product\n        })\n        \n        setProducts(updatedProducts)\n        localStorage.setItem('ecommerce_products', JSON.stringify(updatedProducts))\n        \n        // إرسال حدث مخصص لتحديث المنتجات في الصفحة الرئيسية\n        window.dispatchEvent(new Event('productsUpdated'))\n        \n        setMessage(`✅ Category \"${categoryToDelete}\" deleted successfully! Products moved to \"Other\" category.`)\n        setTimeout(() => setMessage(''), 4000)\n        \n        console.log(`✅ Category \"${categoryToDelete}\" deleted and products updated`)\n      } catch (error) {\n        console.error('Error deleting category:', error)\n        setMessage('⚠️ Error deleting category')\n        setTimeout(() => setMessage(''), 3000)\n      }\n    }\n  }\n\n  const handleAddCategory = (e) => {\n    e.preventDefault()\n    \n    if (!newCategory.trim()) {\n      setMessage('Please enter a category name')\n      return\n    }\n\n    const categoryName = newCategory.trim().toLowerCase()\n    \n    if (categories.includes(categoryName)) {\n      setMessage('This category already exists')\n      return\n    }\n\n    const updatedCategories = [...categories, categoryName]\n    setCategories(updatedCategories)\n    localStorage.setItem('ecommerce_categories', JSON.stringify(updatedCategories))\n    \n    setNewCategory('')\n    setShowCategoryForm(false)\n    setMessage(`Category \"${categoryName}\" added successfully!`)\n    \n    setTimeout(() => setMessage(''), 3000)\n  }\n\n  if (isLoading) {\n    return (\n      <div style={{\n        display: 'flex',\n        justifyContent: 'center',\n        alignItems: 'center',\n        height: '100vh',\n        background: '#f5f7fa'\n      }}>\n        <div style={{\n          textAlign: 'center',\n          color: '#666'\n        }}>\n          <div style={{\n            width: '40px',\n            height: '40px',\n            border: '4px solid #f3f3f3',\n            borderTop: '4px solid #667eea',\n            borderRadius: '50%',\n            animation: 'spin 1s linear infinite',\n            margin: '0 auto 20px'\n          }}></div>\n          <p>Loading...</p>\n        </div>\n      </div>\n    )\n  }\n\n  // Allow access if no users exist (first time setup) or if user is logged in\n  const currentUserEmail = localStorage.getItem('currentUserEmail') || \n                          localStorage.getItem('loggedInUser') || \n                          localStorage.getItem('userEmail')\n  const users = JSON.parse(localStorage.getItem('users') || '[]')\n  \n  if (!currentUserEmail && users.length > 0) {\n    return (\n      <div className=\"access-denied\">\n        <h1>Access Denied</h1>\n        <p>You don't have permission to access this page.</p>\n        <button onClick={() => navigate('/')}>Go Home</button>\n      </div>\n    )\n  }\n\n  return (\n    <div className={`add-products-container ${darkMode ? 'dark-mode' : ''}`}>\n      <div className=\"add-products-header\">\n        <h1>Product Management</h1>\n        <p>Add, edit, and manage your products</p>\n      </div>\n\n      {message && (\n        <div className={`message ${message.includes('successfully') ? 'success' : 'error'}`}>\n          {message}\n        </div>\n      )}\n\n      <div className=\"admin-actions\">\n        {!showCategoriesSection && (\n          <>\n        <button \n              className=\"add-product-btn\"\n              onClick={() => {\n                setShowForm(!showForm)\n                setEditingProduct(null)\n              }}\n            >\n              {showForm ? 'Cancel' : 'Add New Product'}\n            </button>\n\n          </>\n        )}\n        <button // Categories Management button\n          className=\"categories-management-btn\"\n          onClick={() => {\n            setShowCategoriesSection(!showCategoriesSection)\n            if (!showCategoriesSection) {\n              // Scroll to categories section when showing\n              setTimeout(() => {\n                const categoriesSection = document.querySelector('.categories-section')\n                if (categoriesSection) {\n                  categoriesSection.scrollIntoView({ behavior: 'smooth' })\n                }\n              }, 100)\n            }\n          }}\n          title=\"Manage product categories\"\n        >\n          {showCategoriesSection ? '⬆️ Back to Top' : '📂 Categories'}\n        </button>\n      </div>\n\n      {/* Product Form */}\n      {showForm && !showCategoriesSection && (\n        <div className=\"product-form-container\">\n          <h2>{editingProduct ? 'Edit Product' : 'Add New Product'}</h2>\n          \n          <form onSubmit={editingProduct ? handleEditSubmit : handleSubmit} className=\"product-form\">\n          <div className=\"form-group\">\n              <label htmlFor=\"title\">Product Title *</label>\n            <input\n              type=\"text\"\n                id=\"title\"\n                name=\"title\"\n                value={editingProduct ? editingProduct.title : newProduct.title}\n                onChange={editingProduct ? handleEditInputChange : handleInputChange}\n                placeholder=\"Enter product title\"\n              required\n            />\n          </div>\n\n            <div className=\"form-row\">\n          <div className=\"form-group\">\n                <label htmlFor=\"price\">Price *</label>\n            <input\n              type=\"number\"\n              id=\"price\"\n              name=\"price\"\n                  value={editingProduct ? editingProduct.price : newProduct.price}\n                  onChange={editingProduct ? handleEditInputChange : handleInputChange}\n                  placeholder=\"0.00\"\n              step=\"0.01\"\n                  min=\"0\"\n              required\n            />\n          </div>\n\n          <div className=\"form-group\">\n                <label htmlFor=\"quantity\">Quantity *</label>\n                <input\n                  type=\"number\"\n                  id=\"quantity\"\n                  name=\"quantity\"\n                  value={editingProduct ? editingProduct.quantity : newProduct.quantity}\n                  onChange={editingProduct ? handleEditInputChange : handleInputChange}\n                  placeholder=\"1\"\n                  min=\"1\"\n              required\n            />\n              </div>\n          </div>\n\n          <div className=\"form-group\">\n              <label htmlFor=\"category\">Category *</label>\n              <div className=\"category-selector\">\n                <button\n                  type=\"button\"\n                  className=\"category-dropdown-btn\"\n                  onClick={() => setShowCategoryDropdown(!showCategoryDropdown)}\n                >\n                  {editingProduct ? editingProduct.category : newProduct.category}\n                  <span className=\"dropdown-arrow\">▼</span>\n                </button>\n                {showCategoryDropdown && (\n                  <div className=\"category-dropdown\">\n                    {categories.map(category => (\n                      <div\n                        key={category}\n                        className=\"category-option\"\n                        onClick={() => {\n                          if (editingProduct) {\n                            setEditingProduct(prev => ({ ...prev, category }))\n                          } else {\n                            setNewProduct(prev => ({ ...prev, category }))\n                          }\n                          setShowCategoryDropdown(false)\n                        }}\n                      >\n                        {category.charAt(0).toUpperCase() + category.slice(1)}\n                      </div>\n                    ))}\n                  </div>\n                )}\n              </div>\n          </div>\n\n          <div className=\"form-group\">\n              <label htmlFor=\"image\">Product Image *</label>\n              <div className=\"image-upload-container\">\n            <input\n                  type=\"text\"\n              id=\"image\"\n              name=\"image\"\n                  value={editingProduct ? editingProduct.image : newProduct.image}\n                  onChange={editingProduct ? handleEditInputChange : handleInputChange}\n                  placeholder=\"Enter image URL (supports: jpg, png, webp, gif)\"\n              required\n            />\n                <input\n                  type=\"file\"\n                  id=\"imageFile\"\n                  accept=\"image/*\"\n                  onChange={(e) => {\n                    const file = e.target.files[0]\n                    if (file) {\n                      const reader = new FileReader()\n                      reader.onload = (e) => {\n                        if (editingProduct) {\n                          setEditingProduct(prev => ({\n                            ...prev,\n                            image: e.target.result\n                          }))\n                        } else {\n                          setNewProduct(prev => ({\n                            ...prev,\n                            image: e.target.result\n                          }))\n                        }\n                      }\n                      reader.readAsDataURL(file)\n                    }\n                  }}\n                  className=\"file-input\"\n                />\n                <label htmlFor=\"imageFile\" className=\"file-label\">\n                  <svg className=\"upload-icon\" xmlns=\"http://www.w3.org/2000/svg\" viewBox=\"0 0 24 24\" fill=\"none\" stroke=\"currentColor\" strokeWidth=\"2\">\n                    <path d=\"M21 15v4a2 2 0 0 1-2 2H5a2 2 0 0 1-2-2v-4\"></path>\n                    <polyline points=\"7,10 12,15 17,10\"></polyline>\n                    <line x1=\"12\" y1=\"15\" x2=\"12\" y2=\"3\"></line>\n                  </svg>\n                  Choose Image\n                </label>\n                {(editingProduct ? editingProduct.image : newProduct.image) && (\n                  <div className=\"image-preview\">\n                    <img \n                      src={editingProduct ? editingProduct.image : newProduct.image} \n                      alt=\"Preview\" \n                      loading=\"eager\"\n                      decoding=\"async\"\n                      onLoad={(e) => {\n                        e.target.style.opacity = '1';\n                      }}\n                      style={{\n                        opacity: 0,\n                        transition: 'opacity 0.3s ease'\n                      }}\n                    />\n                    <button \n                      type=\"button\" \n                      className=\"remove-image\"\n                      onClick={() => {\n                        if (editingProduct) {\n                          setEditingProduct(prev => ({ ...prev, image: '' }))\n                        } else {\n                          setNewProduct(prev => ({ ...prev, image: '' }))\n                        }\n                      }}\n                    >\n                      ×\n                    </button>\n                  </div>\n                )}\n              </div>\n          </div>\n\n          <div className=\"form-group\">\n              <label htmlFor=\"description\">Description</label>\n              <textarea\n                id=\"description\"\n                name=\"description\"\n                value={editingProduct ? editingProduct.description : newProduct.description}\n                onChange={editingProduct ? handleEditInputChange : handleInputChange}\n                rows=\"4\"\n                placeholder=\"Enter product description\"\n            />\n          </div>\n\n            <div className=\"form-actions\">\n              <button type=\"submit\" className=\"submit-btn\">\n                {editingProduct ? 'Update Product' : 'Add Product'}\n              </button>\n\n              <button \n                type=\"button\" \n                className=\"cancel-btn\"\n                onClick={() => {\n                  setShowForm(false)\n                  setEditingProduct(null)\n                }}\n              >\n                Cancel\n          </button>\n            </div>\n        </form>\n        </div>\n      )}\n\n      {/* Products Display Section */}\n      {!showCategoriesSection && (\n        <div className=\"products-section\">\n          <div className=\"products-header\">\n            <h2>Products Management ({products.length})</h2>\n      </div>\n\n        {products.length === 0 ? (\n            <div className=\"no-products\">\n              <p>No products added yet.</p>\n            </div>\n        ) : (\n          <div className=\"products-grid\">\n            {products.map(product => (\n              <div key={product.id} className=\"product-card\">\n                <div className=\"product-image\">\n                    <img \n                      src={product.image} \n                      alt={product.title} \n                      loading=\"eager\"\n                      decoding=\"async\"\n                      fetchPriority=\"high\"\n                      onLoad={(e) => {\n                        e.target.style.opacity = '1';\n                        e.target.style.transform = 'scale(1)';\n                      }}\n                      onError={(e) => {\n                        e.target.style.display = 'none';\n                        e.target.nextSibling.style.display = 'block';\n                      }}\n                      style={{\n                        opacity: 0,\n                        transform: 'scale(0.95)',\n                        transition: 'all 0.3s ease'\n                      }}\n                    />\n                    <div className=\"image-placeholder\" style={{ display: 'none' }}>\n                      <span>📷</span>\n                      <p>No Image</p>\n                    </div>\n                    \n                    {/* Stock Status Overlay */}\n                    <div className=\"stock-status-overlay\">\n                      {product.quantity === 0 ? (\n                        <span className=\"out-of-stock-overlay\">\n                          <span className=\"stock-icon\">❌</span>\n                          <span className=\"stock-text\">Out of Stock</span>\n                        </span>\n                      ) : product.quantity <= 5 ? (\n                        <span className=\"low-stock-overlay\">\n                          <span className=\"stock-icon\">⚠️</span>\n                          <span className=\"stock-text\">Low Stock</span>\n                        </span>\n                      ) : (\n                        <span className=\"in-stock-overlay\">\n                          <span className=\"stock-icon\">✅</span>\n                          <span className=\"stock-text\">In Stock</span>\n                        </span>\n                      )}\n                    </div>\n                    \n                    {product.updatedAt && (\n                      <div className=\"updated-badge\">Updated</div>\n                    )}\n                    {product.isProtected && (\n                      <div className=\"protected-badge\">🔒 Protected</div>\n                    )}\n                  </div>\n                  <div className=\"product-info\">\n                    <h3>{product.title}</h3>\n                    <p className=\"price\">${product.price}</p>\n                    <p className=\"quantity\">Quantity: {product.quantity || 1}</p>\n\n                    <p className=\"category\">{product.category}</p>\n                    {product.description && (\n                      <p className=\"description\">{product.description}</p>\n                    )}\n                    <p className=\"product-id\">ID: {product.id}</p>\n                    <p className=\"created-date\">\n                      Created: {new Date(product.createdAt).toLocaleDateString()}\n                      {product.createdBy && ` by ${product.createdBy}`}\n                    </p>\n                    {product.updatedAt && (\n                      <p className=\"updated-date\">\n                        Updated: {new Date(product.updatedAt).toLocaleDateString()}\n                        {product.updatedBy && ` by ${product.updatedBy}`}\n                      </p>\n                    )}\n                    {product.isProtected && (\n                      <p className=\"protected-info\">\n                        🔒 Protected Product - Only yahiapro400@gmail.com and yahiacool2009@gmail.com can modify\n                      </p>\n                    )}\n                </div>\n                <div className=\"product-actions\">\n                    <button \n                      className=\"edit-btn\"\n                      onClick={() => {\n                        setEditingProduct({\n                          ...product,\n                          price: product.price.toString(),\n                          quantity: product.quantity.toString()\n                        })\n                        setShowForm(true)\n                      }}\n                      title=\"Edit Product\"\n                    >\n                      ✏️ Edit\n                    </button>\n                  <button \n                    className=\"delete-btn\"\n                      onClick={() => {\n                        const productToDelete = products.find(p => p.id === product.id)\n                        \n                        // Check if trying to delete a protected product\n                        if (productToDelete && productToDelete.isProtected && !canModifyProtectedAdmin()) {\n                          alert('❌ Cannot delete protected products!\\n\\nOnly yahiapro400@gmail.com and yahiacool2009@gmail.com can delete protected products.')\n                          return\n                        }\n                        \n                        if (window.confirm('Are you sure you want to delete this product?')) {\n                          const updatedProducts = products.filter(p => p.id !== product.id)\n                          setProducts(updatedProducts)\n                          \n                          try {\n                            const limitedProducts = updatedProducts.slice(-50)\n                            const compressedData = JSON.stringify(limitedProducts)\n                            localStorage.setItem('ecommerce_products', compressedData)\n                            \n                            const storedData = localStorage.getItem('ecommerce_products')\n                            if (!storedData) {\n                              throw new Error('Failed to store products')\n                            }\n                            \n                            console.log(`✅ Successfully deleted product. ${limitedProducts.length} products remaining in localStorage`)\n                          } catch (error) {\n                            console.error('Error deleting product:', error)\n                            setMessage('⚠️ Warning: Product deleted but storage may be limited.')\n                            setTimeout(() => setMessage(''), 5000)\n                          }\n                          \n                          window.dispatchEvent(new Event('productsUpdated'))\n                          \n                          setMessage(`Product \"${productToDelete.title}\" deleted successfully! Remaining products: ${updatedProducts.length}`)\n                          setTimeout(() => setMessage(''), 3000)\n                        }\n                      }}\n                      title=\"Delete Product\"\n                    >\n                      🗑️ Delete\n                  </button>\n                </div>\n              </div>\n            ))}\n          </div>\n        )}\n      </div>\n      )}\n\n      {/* Categories Management Section */}\n      {showCategoriesSection && (\n        <div className=\"categories-section\">\n        <div className=\"categories-header\">\n          <h2>Categories Management ({categories.length})</h2>\n          <div className=\"categories-actions\">\n            <button \n              className=\"add-category-btn\"\n              onClick={() => setShowCategoryForm(!showCategoryForm)}\n            >\n              {showCategoryForm ? 'Cancel' : '➕ Add New Category'}\n            </button>\n            <button \n              className=\"back-to-top-btn\"\n              onClick={() => {\n                window.scrollTo({ top: 0, behavior: 'smooth' })\n              }}\n            >\n              ⬆️ Back to Top\n            </button>\n          </div>\n        </div>\n\n        {showCategoryForm && (\n          <div className=\"category-form\">\n            <form onSubmit={handleAddCategory}>\n              <div className=\"form-group\">\n                <label htmlFor=\"newCategory\">Category Name</label>\n                <input\n                  type=\"text\"\n                  id=\"newCategory\"\n                  value={newCategory}\n                  onChange={(e) => setNewCategory(e.target.value)}\n                  placeholder=\"Enter category name\"\n                  required\n                />\n              </div>\n              <button type=\"submit\" className=\"submit-btn\">Add Category</button>\n            </form>\n          </div>\n        )}\n\n        <div className=\"categories-grid\">\n          {categories.map(category => (\n            <div key={category} className=\"category-card\">\n              <div className=\"category-info\">\n                <h3>{category.charAt(0).toUpperCase() + category.slice(1)}</h3>\n                <p>Products in this category: {products.filter(p => p.category === category).length}</p>\n              </div>\n              <div className=\"category-actions\">\n                <button \n                  className=\"delete-category-btn\"\n                  onClick={() => handleDeleteCategory(category)}\n                  disabled={category === 'other'}\n                  title={category === 'other' ? 'Cannot delete default category' : 'Delete category'}\n                >\n                  🗑️ Delete\n                </button>\n              </div>\n            </div>\n          ))}\n        </div>\n      </div>\n      )}\n    </div>\n  )\n} "],"names":["AddProducts","_ref","darkMode","navigate","useNavigate","user","setUser","useState","isLoading","setIsLoading","message","setMessage","showForm","setShowForm","showStats","setShowStats","showCategoriesSection","setShowCategoriesSection","showCategoryForm","setShowCategoryForm","showCategoryDropdown","setShowCategoryDropdown","products","setProducts","categories","setCategories","newCategory","setNewCategory","newProduct","setNewProduct","title","price","quantity","image","description","category","editingProduct","setEditingProduct","protectedAdmins","isProtectedAdmin","currentUserEmail","localStorage","getItem","includes","canModifyProtectedAdmin","useEffect","JSON","parse","length","email","loadProducts","loadCategories","currentUser","find","u","setTimeout","forEach","product","Image","src","limitedProducts","slice","setItem","stringify","console","log","error","handleStorageChange","e","key","clearTimeout","window","storageTimeout","addEventListener","handleClickOutside","event","target","closest","document","removeEventListener","storedProducts","parsedProducts","storedCategories","parsedCategories","handleInputChange","name","value","prev","handleEditInputChange","clearForm","_jsx","style","display","justifyContent","alignItems","height","background","children","_jsxs","textAlign","color","width","border","borderTop","borderRadius","animation","margin","users","className","onClick","_Fragment","categoriesSection","querySelector","scrollIntoView","behavior","onSubmit","preventDefault","isProtected","alert","updatedProduct","parseFloat","parseInt","updatedAt","Date","toISOString","updatedBy","updatedProducts","map","id","compressedData","Error","dispatchEvent","Event","now","createdAt","createdBy","optimizedProducts","location","href","htmlFor","type","onChange","placeholder","required","step","min","charAt","toUpperCase","accept","file","files","reader","FileReader","onload","result","readAsDataURL","xmlns","viewBox","fill","stroke","strokeWidth","d","points","x1","y1","x2","y2","alt","loading","decoding","onLoad","opacity","transition","rows","fetchPriority","transform","onError","nextSibling","toLocaleDateString","toString","productToDelete","p","confirm","filter","scrollTo","top","trim","categoryName","toLowerCase","updatedCategories","categoryToDelete","cat","handleDeleteCategory","disabled"],"sourceRoot":""}